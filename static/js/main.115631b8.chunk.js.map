{"version":3,"sources":["context/blockchain/index.js","context/blockchain/useAddresses.js","context/web3Data/hooks/useWeb3Provider.js","context/blockchain/useVotingRightsContract.js","context/blockchain/useAllowance.js","context/blockchain/useContracts.js","context/blockchain/useBlocks.js","context/blockchain/useBalance.js","utils/bigNumbers.js","components/layout/Heading.js","components/layout/Section.js","components/BlockchainContainer/index.js","components/layout/Container.js","assets/images/logo.png","components/forms/Input.js","components/forms/Button.js","components/hooks/useStaking.js","context/blockchain/useTransaction.js","components/StakingContainer/StakingForm.js","components/StakingContainer/UnStakingForm.js","components/StakingContainer/index.js","components/Body.js","components/Footer.js","utils/index.js","assets/images/icon.svg","components/header/AccountDisplay.js","assets/images/wallet.svg","components/header/index.js","components/layout/AppWrapper.js","App.js","reportWebVitals.js","context/web3Data/actions.js","context/web3Data/web3Modal.config.js","context/web3Data/helpers.js","context/web3Data/chains.js","context/web3Data/Web3Provider.jsx","context/web3Data/hooks/useLIsteners.js","index.js"],"names":["context","useAddresses","chainId","useState","addresses","setAddresses","useEffect","parseInt","process","sarcophagusToken","SarcoStakingProxy","SarcoVotingRightsProxy","Web3ProviderContext","createContext","useWeb3Provider","useContext","useVotingRightsContract","sarcophagusVotingRightsContract","blockNumber","state","provider","account","BigNumber","from","totalSupply","setTotalSupply","vrBalance","setBalance","then","catch","e","console","error","balanceOf","balance","useAllowance","sarcophagusStakingContract","sarcophagusTokenContract","currentBlock","allowance","setAllowance","address","DataProvider","displayName","Provider","children","signerOrProvider","setSarcophagusTokenContract","contract","Contract","SarcoTokenABI","useSarcophagusTokenContract","setSarcophagusStakingContract","SarcoStakingABI","useSarcophagusStakingContract","setSarcophagusVotingRightsContract","SarcoVotingRightsABI","useSarcophagusVotingRightsContract","setCurrentBlock","getBlockNumber","on","removeListener","useCurrentBlock","useSarcoBalance","dataContext","votingRights","vrBalanceBN","totalSupplyBN","isZero","vr","parseFloat","utils","formatEther","ts","toFixed","getVotingRightPercentage","value","createDataRoot","useData","Heading","varient","addClassnames","label","className","classnames","Section","ColumnContainer","Value","BlockchainContainer","Container","Input","currency","setValue","decimals","icon","balanceName","inputDisable","numeral","src","alt","type","step","Array","fill","join","slice","makeStep","disabled","required","name","id","onChange","normalizedValue","inputValue","target","Math","min","calculateValue","max","placeholder","Button","rest","useStaking","sarco","setSarco","sarcoBN","setSarcoBN","buttonText","setButtonText","pending","setPending","contractCall","useCallback","contractFn","parameters","pendingMessage","failedMessage","successMessage","successCallback","completedCallback","toastId","txResponse","toast","info","autoClose","closeOnClick","draggable","Promise","all","wait","txReceipt","dismiss","status","success","useTransaction","callData","setCallData","buttonEnabled","setButtonEnabled","gt","parseUnits","lt","approve","pow","sub","stake","unstake","calls","preventDefault","StakingForm","onSubmit","logo","UnStakingForm","StakingContainer","Link","network","etherscanURL","href","rel","Body","Footer","connectionType","packageJson","version","truncate","fullStr","strLen","separator","sepLength","length","charsToShow","frontChars","ceil","backChars","floor","substr","AccountDisplay","connect","onClick","Header","wallet","AppWrapper","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Web3ProviderActions","WEB3_MODAL_CONFIG","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","makeInjectedProvider","web3Provider","a","REACT_APP_LOCAL_CHAIN_ID","getNetwork","local","signer","getSigner","getAddress","getInjectedProvider","web3ModalProvider","resolve","reject","userSuppliedProvider","ethers","providers","Web3Provider","getFallbackProvider","providerApiKeys","defaultProvider","getDefaultProvider","supportedChains","web3Modal","Web3Modal","initialState","isProviderLoading","reducer","action","payload","clearCachedProvider","useReducer","dispatch","connectDefaultProvider","REACT_APP_LOCAL_PROVIDER_URL","userInjectedProvider","includes","disconnect","modalProvider","setModalProvider","_modalProvider","dark","accounts","isWalletConnect","off","removeAllListeners","useListeners","load","cachedProvider","contextValue","useMemo","ReactDOM","render","StrictMode","closeButton","position","hideProgressBar","newestOnTop","rtl","pauseOnFocusLoss","document","getElementById"],"mappings":"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","file":"static/js/main.115631b8.chunk.js","sourcesContent":["import { createContext, useContext } from 'react'\nimport { useSarcophagusStakingContract, useSarcophagusTokenContract, useSarcophagusVotingRightsContract } from './useContracts'\nimport { useSarcoBalance } from './useBalance'\nimport { useCurrentBlock } from './useBlocks'\nimport useVotingRightsContract from './useVotingRightsContract'\nimport { getVotingRightPercentage } from '../../utils/bigNumbers'\nimport useAllowance from './useAllowance'\n\nlet context\n\nconst createDataRoot = () => {\n  context = createContext()\n  context.displayName = 'Data Provider'\n  const Provider = context.Provider\n\n  \n  return ({ children }) => {\n    const sarcophagusTokenContract = useSarcophagusTokenContract()\n    const sarcophagusStakingContract = useSarcophagusStakingContract()\n    const sarcophagusVotingRightsContract = useSarcophagusVotingRightsContract()\n    \n    const currentBlock = useCurrentBlock()\n\n    const balance = useSarcoBalance(sarcophagusTokenContract, currentBlock)\n    const allowance = useAllowance(sarcophagusStakingContract, sarcophagusTokenContract, currentBlock)\n\n    const { totalSupply, vrBalance } = useVotingRightsContract( sarcophagusVotingRightsContract, currentBlock )\n    const votingRights = getVotingRightPercentage(vrBalance, totalSupply)\n\n    const dataContext = {\n      sarcophagusTokenContract,\n      sarcophagusStakingContract,\n      sarcophagusVotingRightsContract,\n      balance,\n      allowance,\n      vrBalance,\n      totalSupply,\n      votingRights,\n    }\n    return <Provider value={dataContext}>{children}</Provider>\n  }\n}\n\nconst DataProvider = createDataRoot()\n\nconst useData = () => {\n  return useContext(context)\n}\n\nexport { DataProvider, useData }","import { useEffect, useState } from 'react'\nconst useAddresses = chainId => {\n  const [addresses, setAddresses] = useState()\n\n  useEffect(() => {\n    if (chainId === parseInt(process.env.REACT_APP_CHAIN_ID, 10)) {\n      setAddresses({\n        sarcophagusToken: process.env.REACT_APP_SARCO_TOKEN_ADDRESS,\n        SarcoStakingProxy: process.env.REACT_APP_SARCO_STAKING_PROXY_ADDRESS,\n        SarcoVotingRightsProxy: process.env.REACT_APP_SARCO_VOTING_RIGHTS_PROXY_ADDRESS\n      })\n    }\n  }, [chainId])\n\n  return addresses\n}\n\nexport {\n  useAddresses\n} ","import { createContext, useContext } from 'react';\n\nexport const Web3ProviderContext = createContext(null);\n\nexport const useWeb3Provider = () => useContext(Web3ProviderContext);\n","import { BigNumber } from \"@ethersproject/bignumber\"\nimport { useEffect } from \"react\"\nimport { useState } from \"react\"\nimport { useWeb3Provider } from \"../web3Data/hooks/useWeb3Provider\"\n\nconst useVotingRightsContract = (sarcophagusVotingRightsContract, blockNumber) => {\n  const { state: { provider, account } } = useWeb3Provider()\n  const [totalSupply, setTotalSupply] = useState(BigNumber.from(0))\n  const [vrBalance, setBalance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (provider) {\n      sarcophagusVotingRightsContract?.totalSupply().then(totalSupply => {\n        setTotalSupply(totalSupply)\n      }).catch(e => console.error('Error total supply', e))\n    }\n  }, [provider, sarcophagusVotingRightsContract, blockNumber])\n\n  useEffect(() => {\n    if (provider && blockNumber && account) {\n      sarcophagusVotingRightsContract?.balanceOf(account).then(balance => {\n        setBalance(balance)\n      }).catch(e => console.error('Error balance', e))\n    }\n  }, [provider, sarcophagusVotingRightsContract, blockNumber, account])\n\n\n\n  return { totalSupply, vrBalance }\n}\n\nexport default useVotingRightsContract","import { BigNumber } from \"@ethersproject/bignumber\"\nimport { useEffect, useState } from \"react\"\nimport { useWeb3Provider } from \"../web3Data/hooks/useWeb3Provider\"\n\nconst useAllowance = (sarcophagusStakingContract, sarcophagusTokenContract, currentBlock) => {\n  const { state: { account} } = useWeb3Provider()\n  const [allowance, setAllowance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!!account && !!sarcophagusStakingContract && !!sarcophagusTokenContract) {\n      sarcophagusTokenContract.allowance(account, sarcophagusStakingContract.address).then(allowance => {\n        setAllowance(allowance)\n      }).catch(e => console.error(e))\n    }\n  }, [account, sarcophagusStakingContract, sarcophagusTokenContract, currentBlock])\n  return allowance\n}\n\nexport default useAllowance","import { useEffect, useState } from 'react'\nimport { Contract } from 'ethers'\nimport SarcoTokenABI from '../artifacts/SarcoToken.json'\nimport SarcoStakingABI from '../artifacts/SarcoStaking.json'\nimport SarcoVotingRightsABI from '../artifacts/SarcoVotingRights.json'\nimport { useWeb3Provider } from \"../web3Data/hooks/useWeb3Provider\"\nimport { useAddresses } from './useAddresses'\n\nconst useSarcophagusTokenContract = () => {\n  const { state: { chainId, signerOrProvider } } = useWeb3Provider()\n  const addresses = useAddresses(chainId)\n  const [sarcophagusTokenContract, setSarcophagusTokenContract] = useState()\n\n  useEffect(() => {\n    if (!chainId || !addresses || !signerOrProvider) return\n    try {\n      const contract = new Contract(addresses.sarcophagusToken, SarcoTokenABI, signerOrProvider)\n      setSarcophagusTokenContract(contract)\n    } catch (e) {\n      console.error('Token Contract: ', e)\n    }\n  }, [chainId, signerOrProvider, addresses])\n\n  return sarcophagusTokenContract\n}\nconst useSarcophagusVotingRightsContract = () => {\n  const { state: { chainId, signerOrProvider } } = useWeb3Provider()\n  const addresses = useAddresses(chainId)\n  const [sarcophagusVotingRightsContract, setSarcophagusVotingRightsContract] = useState()\n\n  useEffect(() => {\n    if (!chainId || !addresses || !signerOrProvider) return\n    try {\n      const contract = new Contract(addresses.SarcoVotingRightsProxy, SarcoVotingRightsABI, signerOrProvider)\n      setSarcophagusVotingRightsContract(contract)\n    } catch (e) {\n      console.error('Voting Rights Contract: ', e)\n    }\n  }, [chainId, signerOrProvider, addresses])\n\n  return sarcophagusVotingRightsContract\n}\nconst useSarcophagusStakingContract = () => {\n  const { state: { chainId, signerOrProvider } } = useWeb3Provider()\n  const addresses = useAddresses(chainId)\n  const [sarcophagusStakingContract, setSarcophagusStakingContract] = useState()\n\n  useEffect(() => {\n    if (!chainId || !addresses || !signerOrProvider) return\n    try {\n      const contract = new Contract(addresses.SarcoStakingProxy, SarcoStakingABI, signerOrProvider)\n      setSarcophagusStakingContract(contract)\n    } catch (e) {\n      console.error('Staking Contract: ', e)\n    }\n  }, [chainId, signerOrProvider, addresses])\n\n  return sarcophagusStakingContract\n}\n\n\n\nexport {\n  useSarcophagusTokenContract,\n  useSarcophagusVotingRightsContract,\n  useSarcophagusStakingContract\n}\n","import { useEffect, useState } from \"react\"\nimport { useWeb3Provider } from \"../web3Data/hooks/useWeb3Provider\"\n\nconst useCurrentBlock = () => {\n    const [currentBlock, setCurrentBlock] = useState(0)\n    const { state: { provider } } = useWeb3Provider()\n  \n    useEffect(() => {\n      if (!provider) return\n  \n      provider.getBlockNumber().then(blockNumber => {\n        setCurrentBlock(blockNumber)\n      }).catch(console.error)\n  \n      const getBlockNumber = blockNumber => {\n        setCurrentBlock(blockNumber)\n      }\n  \n      provider.on('block', getBlockNumber)\n  \n      return () => {\n        provider.removeListener('block', getBlockNumber)\n      }\n    }, [provider])\n  \n    return currentBlock\n  }\n\nexport {\n    useCurrentBlock\n}","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3Provider } from '../web3Data/hooks/useWeb3Provider'\n\nconst useSarcoBalance = (sarcophagusTokenContract, currentBlock) => {\n  const { state: { account} } = useWeb3Provider()\n  const [balance, setBalance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !sarcophagusTokenContract) return\n\n    sarcophagusTokenContract.balanceOf(account).then(balance => {\n      setBalance(balance)\n    }).catch(console.error)\n  }, [account, sarcophagusTokenContract, currentBlock])\n\n  return balance\n}\n\nexport { useSarcoBalance }","import { utils } from \"ethers\"\nimport numeral from \"numeral\"\n\nexport const makeNumeral = (bigNumber, decimals) => {\n  return numeral(utils.formatUnits(bigNumber, decimals))\n}\n\nexport const getDecimalNumber = (bigNumber, decimals) => {\n  return makeNumeral(bigNumber, decimals).value()\n}\n\nexport const getNumberalString = (bigNumber, decimals, isFixed) => {\n  if(isFixed) return makeNumeral(bigNumber, decimals).value().toFixed().toString()\n  return makeNumeral(bigNumber, decimals).input()\n}\n\nexport const getVotingRightPercentage = (vrBalanceBN, totalSupplyBN) => {\n  if(vrBalanceBN?.isZero()) return '0 %'\n  const vr = parseFloat(utils.formatEther((vrBalanceBN)))\n  const ts = parseFloat(utils.formatEther((totalSupplyBN)))\n  const percentage = (vr / ts) * 100\n  return `${percentage.toFixed(9)} %`\n}","import React from 'react'\nimport classnames from 'classnames'\n\nconst BASE_DEFAULT = \"font-normal text-base text-white\"\nconst BASE_HEADING_ONE = \"text-xl text-white\"\nconst BASE_HEADING_TWO = \"text-gray-400 font-normal text-sm\"\n\nconst Heading = ({varient, addClassnames, label}) => {\n  if(varient === \"heading-one\") {\n    return (\n      <div className={classnames(BASE_HEADING_ONE, addClassnames)}>\n        { label }\n      </div>\n    )\n  }\n  if(varient === \"heading-two\") {\n    return (\n      <div className={classnames(BASE_HEADING_TWO, addClassnames)}>\n        { label }\n      </div>\n    )\n  } else return (\n    <div className={classnames(BASE_DEFAULT, addClassnames)}>\n        { label }\n    </div>\n  )\n}\n\nexport default Heading","import React from 'react'\nimport classnames from 'classnames'\n\nconst BORDER_DEFAULT = \"border-t border-b border-gray-500 w-full flex justify-around items-center flex-wrap gap-4\"\nconst BASE_DEFAULT = \"\"\n\nconst Section = ({ addClassnames, children }) => {\n  return (\n    <div className={classnames(BORDER_DEFAULT, BASE_DEFAULT, addClassnames)}>\n      { children }\n    </div>\n  )\n}\n\nexport default Section","import { utils } from 'ethers'\nimport React from 'react'\nimport { useData } from '../../context/blockchain'\nimport Heading from '../layout/Heading'\nimport Section from '../layout/Section'\n\nconst ColumnContainer = ({ children }) => <div className=\"flex flex-col items-center whitespace-no-wrap w-48\">{ children }</div>\nconst Value = ({children}) => <div className=\"\">{ children }</div>\n\nconst BlockchainContainer = () => {\n  const { vrBalance, totalSupply, votingRights} = useData()\n  return (\n    <Section addClassnames=\"mt-6 py-8 flex\">\n      <ColumnContainer>\n        <Heading varient=\"heading-two\" label=\"Total Voting Rights\" />\n        <Value>{ utils.formatEther(totalSupply) } </Value>\n      </ColumnContainer>\n      <ColumnContainer>\n        <Heading varient=\"heading-two\" label=\"My Voting Rights\" />\n        <Value>{ utils.formatEther(vrBalance) } </Value>\n      </ColumnContainer>\n      <ColumnContainer>\n        <Heading varient=\"heading-two\" label=\"My Voting Power\" />\n        <Value>{ votingRights } </Value>\n      </ColumnContainer>\n    </Section>\n  )\n}\n\nexport default BlockchainContainer","import React from 'react'\nimport classnames from 'classnames'\n\nconst BASE_DEFAULT = \"pt-8\"\nconst BASE_WITH_BORDER = \"border-b border-l border-r w-full border-gray-500 py-16 px-8 mb-8 flex justify-around flex-wrap gap-12\"\n\nconst Container = ({ varient, children }) => {\n  if(varient === 'with-border') {\n    return (\n      <div className={classnames(BASE_WITH_BORDER)}>\n        { children }\n      </div>\n    )\n  } else return (\n    <div className={classnames(BASE_DEFAULT)}>\n      { children }\n    </div>\n  )\n}\n\nexport default Container","export default __webpack_public_path__ + \"static/media/logo.46d0239c.png\";","import { utils } from \"ethers\"\nimport numeral from \"numeral\"\nimport React  from \"react\"\n\nconst Input = ({ currency, value, setValue, balance, decimals, icon, balanceName }) => {\n  const calculateValue = setValue => {\n    return e => {\n      let normalizedValue = \"\"\n      const inputValue = e.target.value\n      if (inputValue) normalizedValue = Math.min(inputValue, numeral(utils.formatEther(balance)).value())\n      setValue(normalizedValue)\n    }\n  }\n\n  const makeStep = decimals => {\n    return `0.${Array(decimals).fill(0).join('')}`.slice(0, -1) + '1'\n  }\n\n  const inputDisable = !(numeral(utils.formatEther(balance)).value() > 0)\n\n  return (\n    <div className=\"flex mb-4 text-sm\">\n      <div className=\"mr-4 flex flex-col items-center w-10\">\n        <div className=\"uppercase mb-2\">{currency}</div>\n        <div>\n          <img src={icon} alt=\"icon\" className=\"w-8\"/>\n        </div>\n      </div>\n      <div className=\"w-full\">\n        <div className=\"flex justify-between mb-2 text-gray-400\">\n          <div className=\"flex flex-wrap justify-end w-full\">\n            <div>{balanceName} Balance:</div>\n            <div className=\"ml-1\">{utils.formatEther(balance)}</div>\n          </div>\n        </div>\n        <input type=\"number\" step={makeStep(decimals)} disabled={inputDisable} required name={currency} id={currency} value={value} onChange={calculateValue(setValue)} min=\"1\" max={utils.formatEther(balance)} className={`w-full border-2 border-gray-500 ${inputDisable ? 'text-gray-400' : 'text-white'} bg-gray-900`} placeholder={utils.formatEther(balance)} />\n      </div>\n    </div>\n  )\n}\n\nexport default Input","const Button = ({ children, icon, disabled, className = \"\", ...rest }) => {\n  return (\n    <button {...rest} disabled={disabled} className={`border-2 border-white p-2 min-w-full ${disabled ? \"opacity-50 cursor-not-allowed\" : \"\"} ${className}`}>\n      <div className=\"flex justify-center text-sm items-center\">\n        <div>\n          {children}\n        </div>\n        {icon && <div className=\"ml-3\">\n          <img src={icon} alt=\"icon\" />\n        </div>}\n      </div>\n    </button>\n  )\n}\n\nexport { Button }","import { BigNumber } from \"@ethersproject/bignumber\"\nimport { utils } from \"ethers\"\nimport { useEffect, useState } from \"react\"\nimport { useData } from \"../../context/blockchain\"\nimport { useTransaction } from \"../../context/blockchain/useTransaction\"\nimport { useWeb3Provider } from \"../../context/web3Data/hooks/useWeb3Provider\"\n\nconst useStaking = (varient) => {\n  const { state: { account } } = useWeb3Provider()\n  const { balance, allowance, sarcophagusTokenContract, sarcophagusStakingContract } = useData()\n  const [ sarco, setSarco ] = useState(0)\n  const [ sarcoBN, setSarcoBN] = useState(BigNumber.from(0))\n  const [ buttonText, setButtonText ] = useState(varient)\n  const { contractCall, pending } = useTransaction()\n  const [ callData, setCallData ] = useState([])\n  const [ buttonEnabled, setButtonEnabled ] = useState(false)\n  \n  useEffect(() => {\n    setButtonEnabled(!pending && (sarcoBN.gt(0)))\n  }, [pending, sarcoBN])\n\n  useEffect(() => {\n    setSarco(0)\n  }, [account])\n\n  useEffect(() => {\n    setSarcoBN(utils.parseUnits((sarco || 0).toFixed(18), 18))\n  }, [ sarco ])\n\n  useEffect(() => {\n    if (allowance.lt(sarcoBN)) {\n      setButtonText(\"Approve SARCO\")\n      if ( sarcophagusTokenContract ) {\n        setCallData([\n          sarcophagusTokenContract.approve,\n          [sarcophagusStakingContract?.address, BigNumber.from(2).pow(BigNumber.from(256)).sub(BigNumber.from(1))],\n          \"Approving SARCO...\", \"SARCO approval failed!\", \"SARCO approval made!\"\n        ])}\n      } else {\n        setButtonText(varient === \"Stake\" ? \"Increase Voting Rights\" : \"Decrease Voting Rights\")\n        if ( sarcophagusStakingContract ) {\n          if(varient === 'Stake'){\n            setCallData([\n              sarcophagusStakingContract.stake,\n              [sarcoBN, { }],\n              \"Staking SARCO...\", \"Staking failed!\", \"Staking made!\",\n              () => {\n                setSarco(0)\n                setCallData([])\n              }\n            ])\n          } else {\n            setCallData([\n              sarcophagusStakingContract.unstake,\n              [sarcoBN, { }],\n              \"Unstaking SARCO...\", \"Unstaking failed!\", \"Unstaking made!\",\n              () => {\n                setSarco(0)\n                setCallData([])\n              }\n            ])\n          }\n        }\n      }\n    }, [allowance, sarcoBN, sarcophagusStakingContract, sarcophagusTokenContract, varient, account])\n\n  const calls = e => {\n    e.preventDefault()\n    contractCall(...callData)\n  }\n\n  \n  return { balance, buttonText, buttonEnabled, calls, sarco, setSarco } \n}\n\nexport default useStaking","import { useState, useCallback } from 'react'\nimport { toast } from 'react-toastify'\n\nconst useTransaction = () => {\n  const [pending, setPending] = useState(false)\n\n  const contractCall = useCallback(\n    (contractFn, parameters, pendingMessage, failedMessage, successMessage, successCallback, completedCallback) => {\n      setPending(true)\n      let toastId\n      contractFn(...parameters)\n        .then(txResponse => {\n          toastId = toast.info(pendingMessage, {\n            autoClose: false,\n            closeOnClick: false,\n            draggable: false\n          })\n          return Promise.all([txResponse.wait(), toastId])\n        })\n        .then(([txReceipt, toastId]) => {\n          setPending(false)\n          toast.dismiss(toastId)\n          if (txReceipt.status === 0) {\n            toast.error(failedMessage)\n          } else if (txReceipt.status === 1) {\n            toast.success(successMessage)\n            if (successCallback) successCallback()\n          } else {\n            toast.error(\"Not sure what happened with that transaction\")\n          }\n          if (completedCallback) completedCallback()\n        })\n        .catch(error => {\n          console.error(error)\n          setPending(false)\n          toast.dismiss(toastId)\n          toast.error(\"There was an error! Check your browser's console logs for more details.\")\n        })\n    }, [])\n\n  return { contractCall, pending }\n}\n\nexport { useTransaction }","import React from 'react'\nimport logo from '../../assets/images/logo.png'\nimport Input from '../forms/Input'\nimport { Button } from '../forms/Button'\nimport useStaking from '../hooks/useStaking'\n\nconst StakingForm = () => {\n  const { balance, buttonText, buttonEnabled, calls, sarco, setSarco } = useStaking(\"Stake\")\n  return (\n    <form onSubmit={calls} className=\"w-72\">\n      <div className=\"mt-2 flex flex-col\">\n        <Input currency=\"sarco\" balanceName=\"SARCO\" value={sarco} setValue={setSarco} balance={balance} decimals={18} icon={logo} />\n      </div>\n      <div className=\"text-sm text-gray-400\">\n        Stake SARCO to increase your Voting Rights balance\n      </div>\n      <div className=\"mt-4\">\n        <Button type=\"submit\" disabled={!buttonEnabled}>\n          {buttonText}\n        </Button>\n      </div>\n    </form>\n  )\n}\n\nexport default StakingForm","import React from 'react'\nimport logo from '../../assets/images/logo.png'\nimport Input from '../forms/Input'\nimport { Button } from '../forms/Button'\nimport useStaking from '../hooks/useStaking'\nimport { useData } from '../../context/blockchain'\n\nconst UnStakingForm = () => {\n  const { buttonText, buttonEnabled, calls, sarco, setSarco } = useStaking(\"Unstake\")\n  const { vrBalance } = useData()\n  return (\n    <form onSubmit={calls} className=\"w-72\">\n      <div className=\"mt-2 flex flex-col\">\n        <Input currency=\"sarco\" balanceName=\"VR\" value={sarco} setValue={setSarco} balance={vrBalance} decimals={18} icon={logo} />\n      </div>\n      <div className=\"text-sm text-gray-400\">\n        Unstake SARCO to decrease your Voting Rights balance\n      </div>\n      <div className=\"mt-4\">\n        <Button type=\"submit\" disabled={!buttonEnabled}>\n          {buttonText}\n        </Button>\n      </div>\n    </form>\n  )\n}\n\nexport default UnStakingForm","import React from 'react'\nimport Container from '../layout/Container'\nimport StakingForm from './StakingForm'\nimport UnStakingForm from './UnStakingForm'\n\nconst StakingContainer = () => {\n  return (\n    <Container varient=\"with-border\">\n      <StakingForm />\n      <UnStakingForm />\n    </Container>\n  )\n}\n\nexport default StakingContainer","import React from 'react'\nimport { useAddresses } from '../context/blockchain/useAddresses'\nimport { useWeb3Provider } from '../context/web3Data/hooks/useWeb3Provider'\nimport BlockchainContainer from './BlockchainContainer'\nimport Heading from './layout/Heading'\nimport StakingContainer from './StakingContainer'\n\nconst Link = ({ type, address }) => {\n  const { state: {chainId} } = useWeb3Provider()\n  const network = parseInt(chainId, 10) === 4 ? \"rinkeby.\" : \"\"\n  const etherscanURL = `https://${network}etherscan.io/address/${address}`\n  return <a href={etherscanURL} target=\"_blank\" rel=\"noreferrer noopener\">View {type} Contract on Etherscan</a>\n}\n\nconst Body = () => {\n  const { state: {chainId} } = useWeb3Provider()\n  const addresses = useAddresses(chainId)\n\n  return (\n    <div className=\"flex-grow text-center\">\n      <Heading varient=\"heading-one\" label=\"Sarcophagus Governance\" />\n      <div className=\"flex justify-center\">\n        <div className=\"mt-2 underline text-gray-400 text-sm mr-2\">\n          <Link type=\"Staking\" address={addresses?.SarcoStakingProxy} />\n        </div>\n        <div className=\"mt-1\">/</div>\n        <div className=\"mt-2 underline text-gray-400 text-sm ml-2\">\n          <Link type=\"Voting Rights\" address={addresses?.SarcoVotingRightsProxy} />\n        </div>\n      </div>\n      <BlockchainContainer />\n      <StakingContainer />\n    </div>\n  )\n}\n\nexport default Body","import packageJson from '../../package.json'\nimport { useWeb3Provider } from '../context/web3Data/hooks/useWeb3Provider'\n\nconst Footer = () => {\n  const { state: {connectionType} } = useWeb3Provider()\n  return (\n    <div className=\"text-gray-400 text-xs my-4\">\n      <div className=\"flex justify-between pb-6\">\n        <div>v{packageJson.version + '+' + process.env.REACT_APP_GIT_HASH}</div>\n        <div>{connectionType}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer","export const truncate = (fullStr, strLen, separator, sepLength) => {\n  if (fullStr.length <= strLen) return fullStr;\n\n  separator = separator || '...'\n\n  const sepLen = separator.length\n  const charsToShow = strLen - sepLen\n  const frontChars = Math.ceil(sepLength || charsToShow / 2 + 1) // accounts for the \"0x\"\n  const backChars = Math.floor(charsToShow / 2 - 1) // accounts for the \"0x\"\n\n  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n}","export default __webpack_public_path__ + \"static/media/icon.081a5d9a.svg\";","import React from 'react'\nimport { truncate } from '../../utils'\nimport icon from '../../assets/images/icon.svg'\nimport { useWeb3Provider } from '../../context/web3Data/hooks/useWeb3Provider'\n\nconst AccountDisplay = () => {\n    const { state: { account }, connect } = useWeb3Provider()\n    if (account) {\n        return (\n        <div className=\"flex justify-center items-center w-full\">\n            {truncate(account, 19, '...', 7)}\n            <img src={icon} alt=\"\" className=\"ml-6\" />\n        </div>\n        )\n    } else {\n        return (\n        <button className=\"underline text-center w-full\" onClick={() => connect()}>\n            Connect Web3 Account\n        </button>\n        )\n    }\n}\n\nexport default AccountDisplay","export default __webpack_public_path__ + \"static/media/wallet.7d4fae45.svg\";","import React  from 'react'\nimport AccountDisplay from './AccountDisplay'\nimport logo from '../../assets/images/logo.png'\nimport wallet from '../../assets/images/wallet.svg'\n\nconst Header = () => {\n  return (\n    <div className=\"flex items-center justify-between pt-2 mb-16\">\n      <div className=\"w-24 p-1\">\n        <img src={logo} alt=\"logo\" />\n      </div>\n\n      <div className=\"flex items-center justify-center\">\n        <div>\n          <img src={wallet} alt=\"wallet\" className=\"\" />\n        </div>\n        <div className=\"ml-3 text-sm text-gray-300 \">\n          <AccountDisplay />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header","import React from 'react'\n\nconst AppWrapper = ({ children }) => {\n  return (\n    <div className=\"container min-h-screen flex flex-col justify-between\">\n      {children}\n    </div>\n  )\n}\n\nexport default AppWrapper","import Body from \"./components/Body\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/header\";\nimport AppWrapper from \"./components/layout/AppWrapper\";\n\n\nconst App = () => {\n  return (\n    <AppWrapper>\n      <Header />\n      <Body />\n      <Footer />\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nexport const Web3ProviderActions = {\n  DISCONNECT_WALLET: 'DISCONNECT_WALLET',\n  SET_INJECTED_PROVIDER: 'SET_INJECTED_PROVIDER',\n  SET_LOCAL_PROVIDER: 'SET_LOCAL_PROVIDER',\n  SET_FALLBACK_PROVIDER: 'SET_FALLBACK_PROVIDER',\n}","import WalletConnectProvider from '@walletconnect/ethereum-provider';\n\nexport const WEB3_MODAL_CONFIG = {\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        infuraId: process.env.REACT_APP_INFURA_KEY,\n      },\n    },\n  },\n};\n","import { ethers, getDefaultProvider } from 'ethers';\n\nexport const makeInjectedProvider = async (\n  web3Provider\n) => {\n  const local =\n    process.env.REACT_APP_LOCAL_CHAIN_ID &&\n    (await web3Provider.getNetwork()).chainId ===\n    parseInt(process.env.REACT_APP_LOCAL_CHAIN_ID, 10);\n\n  const signer = web3Provider.getSigner();\n  return {\n    account: await signer.getAddress(),\n    signerOrProvider: signer,\n    provider: web3Provider,\n    connectionType: 'injected provider',\n    network: local ? 'localhost' : (await web3Provider.getNetwork()).name,\n    chainId: (await web3Provider.getNetwork()).chainId,\n  };\n};\n\nexport const getInjectedProvider = (\n  web3ModalProvider) => {\n  return new Promise((resolve, reject) => {\n    web3ModalProvider\n      .connect()\n      .then(userSuppliedProvider =>\n        makeInjectedProvider(new ethers.providers.Web3Provider(userSuppliedProvider))\n      )\n      .then(resolve)\n      .catch(reject);\n  });\n};\n\nexport const getLocalProvider = () => {\n  const localProvider = new ethers.providers.JsonRpcProvider(\n    process.env.REACT_APP_LOCAL_PROVIDER_URL\n  );\n  return new Promise((resolve, reject) => {\n    localProvider\n      .detectNetwork()\n      .then(network => {\n        resolve({\n          provider: localProvider,\n          signerOrProvider: localProvider,\n          connectionType: 'local provider',\n          network: 'localhost',\n          chainId: network.chainId,\n        });\n      })\n      .catch(reject);\n  });\n};\n\nexport const getFallbackProvider = () => {\n  const providerApiKeys = {};\n  if (process.env.REACT_APP_INFURA_KEY)\n    providerApiKeys.infura = process.env.REACT_APP_INFURA_KEY;\n  if (process.env.REACT_APP_ALCHEMY_KEY)\n    providerApiKeys.alchemy = process.env.REACT_APP_ALCHEMY_KEY;\n  if (process.env.REACT_APP_ETHERSCAN_KEY)\n    providerApiKeys.etherscan = process.env.REACT_APP_ETHERSCAN_KEY;\n\n  const network = ethers.providers.getNetwork(\n    parseInt(process.env.REACT_APP_CHAIN_ID || '0', 10)\n  );\n  const defaultProvider = getDefaultProvider(network, providerApiKeys);\n\n  return {\n    provider: defaultProvider,\n    signerOrProvider: defaultProvider,\n    connectionType: 'readonly provider',\n    network: defaultProvider.network.name,\n    chainId: defaultProvider.network.chainId,\n  };\n};\n","export const supportedChains = () => {\n  const dev = process.env.NODE_ENV !== 'production' ? [parseInt(process.env.REACT_APP_CHAIN_ID, 10)] : []\n  return [...dev, parseInt(process.env.REACT_APP_CHAIN_ID, 10)]\n}\n","import { useCallback, useEffect, useMemo, useReducer } from 'react';\nimport Web3Modal from 'web3modal';\nimport { Web3ProviderActions } from './actions';\nimport { WEB3_MODAL_CONFIG } from './web3Modal.config';\nimport { getLocalProvider, getFallbackProvider, getInjectedProvider } from './helpers';\nimport { toast } from 'react-toastify';\nimport { useListeners } from './hooks/useLIsteners';\nimport { supportedChains } from './chains';\nimport { Web3ProviderContext } from './hooks/useWeb3Provider';\n\nconst web3Modal = new Web3Modal(WEB3_MODAL_CONFIG);\nconst initialState = {\n  account: null,\n  signerOrProvider: null,\n  connectionType: 'not connected',\n  network: '',\n  chainId: 0,\n  provider: null,\n  isProviderLoading: false,\n};\n\nconst getInitialState = () => {\n  return {\n    ...initialState,\n    isProviderLoading: true,\n  };\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case Web3ProviderActions.SET_INJECTED_PROVIDER: {\n      const { account, signerOrProvider, provider, connectionType, network, chainId } =\n        action.payload;\n      return {\n        ...state,\n        account,\n        signerOrProvider,\n        provider,\n        connectionType,\n        network,\n        chainId,\n        isProviderLoading: false,\n      };\n    }\n    case Web3ProviderActions.SET_LOCAL_PROVIDER:\n    case Web3ProviderActions.SET_FALLBACK_PROVIDER: {\n      const { provider, connectionType, network, chainId, signerOrProvider } = action.payload;\n      return {\n        ...initialState,\n        provider,\n        connectionType,\n        network,\n        chainId,\n        signerOrProvider,\n        isProviderLoading: false,\n      };\n    }\n    case Web3ProviderActions.DISCONNECT_WALLET: {\n      web3Modal.clearCachedProvider();\n      return { ...initialState };\n    }\n    default:\n      return state;\n  }\n};\n\nexport function Web3Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, getInitialState());\n\n  const connectDefaultProvider = useCallback(async () => {\n    web3Modal.clearCachedProvider();\n    if (process.env.REACT_APP_LOCAL_PROVIDER_URL && process.env.NODE_ENV === 'development') {\n      dispatch({\n        type: Web3ProviderActions.SET_LOCAL_PROVIDER,\n        payload: await getLocalProvider(),\n      });\n    } else {\n      dispatch({\n        type: Web3ProviderActions.SET_FALLBACK_PROVIDER,\n        payload: getFallbackProvider(),\n      });\n    }\n  }, []);\n\n  const connect = useCallback(async () => {\n    const userInjectedProvider = await getInjectedProvider(web3Modal);\n    if (supportedChains().includes(userInjectedProvider.chainId)) {\n      dispatch({\n        type: Web3ProviderActions.SET_INJECTED_PROVIDER,\n        payload: userInjectedProvider,\n      });\n    } else {\n      connectDefaultProvider();\n    }\n  }, [connectDefaultProvider]);\n\n  const disconnect = useCallback(() => {\n    toast('Account disconnected', { toastId: 'disconnected' });\n    // switch to a default provider\n    connectDefaultProvider();\n  }, [connectDefaultProvider]);\n\n  useListeners(web3Modal, connectDefaultProvider, connect);\n\n  const load = useCallback(() => {\n    if (web3Modal.cachedProvider) {\n      connect();\n      return;\n    }\n    connectDefaultProvider();\n  }, [connect, connectDefaultProvider]);\n\n  useEffect(() => load(), [load]);\n\n  const contextValue = useMemo(\n    () => ({\n      state,\n      connect,\n      disconnect,\n    }),\n    [state, connect, disconnect]\n  );\n  return (\n    <Web3ProviderContext.Provider value={contextValue}>{children}</Web3ProviderContext.Provider>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { supportedChains } from '../chains';\n\nconst useListeners = (\n  web3Modal,\n  connectDefaultProvider,\n  connect\n) => {\n  const [modalProvider, setModalProvider] = useState(null);\n\n  useEffect(() => {\n    // subscribe to connect events\n    web3Modal.on('connect', _modalProvider => {\n      // check that connected chain is supported\n      if (!supportedChains().includes(parseInt(_modalProvider.chainId))) {\n        toast(`Switch to a supported chain: ${supportedChains().join(', ')}`, {\n          toastId: 'switchChain',\n        });\n        // switch to a default provider\n        connectDefaultProvider();\n      } else {\n        setModalProvider(_modalProvider);\n        toast.dark('Connected', { toastId: 'connected' });\n      }\n    });\n  }, [web3Modal, connectDefaultProvider]);\n\n  useEffect(() => {\n    if (!modalProvider) return;\n\n    // subscribe to chain events\n    modalProvider.on('chainChanged', (chainId) => {\n      if (!supportedChains().includes(parseInt(chainId))) {\n        // check that connected chain is supported\n        toast.dark(`Chain changed: Switch to a supported chain: ${supportedChains().join(', ')}`, {\n          toastId: 'switchChain',\n        });\n        // switch to a default provider\n        connectDefaultProvider();\n      } else {\n        toast.dark(`Chain changed: ${chainId}`, {\n          toastId: 'connected',\n        });\n        connect();\n      }\n    });\n\n    // subscribe to account change events\n    modalProvider.on('accountsChanged', (accounts) => {\n      if (!accounts.length) {\n        toast.dark('Account access revoked', { toastId: 'accessChanged' });\n        // switch to a default provider\n        connectDefaultProvider();\n        // remove listeners\n        setModalProvider(null);\n      } else {\n        toast.dark('Account changed', { toastId: 'connected' });\n        connect();\n      }\n    });\n\n    // subscribe to provider disconnection\n    modalProvider.on('disconnect', () => {\n      toast.dark('Account disconnected', { toastId: 'disconnected' });\n      // switch to a default provider\n      connectDefaultProvider();\n      // remove listeners\n      setModalProvider(null);\n    });\n\n    // unsubscribe\n    return () => {\n      if(modalProvider.isWalletConnect) {\n        modalProvider.off(\"accountsChanged\");\n        modalProvider.off(\"chainChanged\");\n        modalProvider.off(\"disconnect\");\n      } else {\n        modalProvider.removeAllListeners();\n      }\n    };\n  }, [modalProvider, web3Modal, connectDefaultProvider, connect]);\n};\n\nexport { useListeners };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { DataProvider } from './context/blockchain'\nimport reportWebVitals from './reportWebVitals';\nimport { ToastContainer } from 'react-toastify';\nimport { Web3Provider } from './context/web3Data/Web3Provider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3Provider>\n      <DataProvider>\n        <ToastContainer\n          closeButton={true}\n          position=\"bottom-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          rtl={false}\n          closeOnClick \n          pauseOnFocusLoss\n          draggable\n          />\n        <App />\n      </DataProvider>\n    </Web3Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}