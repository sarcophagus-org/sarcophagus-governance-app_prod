{"version":3,"sources":["web3/index.js","context/blockchain/index.js","web3/chains.js","web3/userSupplied.js","web3/fallback.js","context/blockchain/useVotingRightsContract.js","context/blockchain/useAllowance.js","context/blockchain/useContracts.js","context/blockchain/useBlocks.js","context/blockchain/useBalance.js","utils/bigNumbers.js","components/layout/Heading.js","components/layout/Section.js","components/BlockchainContainer/index.js","components/layout/Container.js","assets/images/logo.png","components/forms/Input.js","components/forms/Button.js","components/hooks/useStaking.js","context/blockchain/useTransaction.js","components/StakingContainer/StakingForm.js","components/StakingContainer/UnStakingForm.js","components/StakingContainer/index.js","components/Body.js","components/Footer.js","utils/index.js","assets/images/icon.svg","components/header/AccountDisplay.js","assets/images/wallet.svg","components/header/index.js","components/layout/AppWrapper.js","App.js","reportWebVitals.js","index.js"],"names":["context","supportedChains","parseInt","process","useAddresses","chainId","useState","addresses","setAddresses","useEffect","sarcophagusToken","SarcoStakingProxy","SarcoVotingRightsProxy","toastOptions","position","hideProgressBar","closeOnClick","autoClose","pauseOnHover","draggable","progress","undefined","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","web3Modal","Web3Modal","cacheProvider","connect","a","Web3Provider","createContext","displayName","Provider","children","userSupplied","setUserSupplied","provider","setProvider","cachedProvider","then","catch","e","console","error","on","includes","toast","dark","toastId","clearCachedProvider","window","location","reload","accounts","length","removeAllListeners","web3Provider","ethers","providers","useUserSuppliedConnect","fallback","previousProvider","defaultProvider","getDefaultProvider","alchemy","etherscan","infura","useFallbackConnect","defaultName","name","account","signerOrProvider","web3","setWeb3","selectedAddress","getSigner","network","value","createWeb3Root","useWeb3","useContext","useVotingRightsContract","sarcophagusVotingRightsContract","blockNumber","BigNumber","from","totalSupply","setTotalSupply","vrBalance","setBalance","balanceOf","balance","useAllowance","sarcophagusStakingContract","sarcophagusTokenContract","currentBlock","allowance","setAllowance","address","DataProvider","setSarcophagusTokenContract","contract","Contract","SarcoTokenABI","useSarcophagusTokenContract","setSarcophagusStakingContract","SarcoStakingABI","useSarcophagusStakingContract","setSarcophagusVotingRightsContract","SarcoVotingRightsABI","useSarcophagusVotingRightsContract","setCurrentBlock","getBlockNumber","removeListener","useCurrentBlock","useSarcoBalance","dataContext","votingRights","vrBalanceBN","totalSupplyBN","isZero","vr","parseFloat","utils","formatEther","ts","toFixed","getVotingRightPercentage","createDataRoot","useData","Heading","varient","addClassnames","label","className","classnames","Section","ColumnContainer","Value","BlockchainContainer","Container","Input","currency","setValue","decimals","icon","balanceName","inputDisable","numeral","src","alt","type","step","Array","fill","join","slice","makeStep","disabled","required","id","onChange","normalizedValue","inputValue","target","Math","min","calculateValue","max","placeholder","Button","rest","useStaking","sarco","setSarco","sarcoBN","setSarcoBN","buttonText","setButtonText","pending","setPending","contractCall","useCallback","contractFn","parameters","pendingMessage","failedMessage","successMessage","successCallback","completedCallback","txResponse","info","Promise","all","wait","txReceipt","dismiss","status","success","useTransaction","callData","setCallData","buttonEnabled","setButtonEnabled","gt","parseUnits","lt","approve","pow","sub","stake","unstake","calls","preventDefault","StakingForm","onSubmit","logo","UnStakingForm","StakingContainer","Link","etherscanURL","href","rel","Body","Footer","packageJson","version","truncate","fullStr","strLen","separator","sepLength","charsToShow","frontChars","ceil","backChars","floor","substr","AccountDisplay","onClick","Header","wallet","AppWrapper","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","closeButton","document","getElementById"],"mappings":"4vVAKIA,ECGAA,E,wICNEC,EAAkB,WAEtB,MAAM,GAAN,OADqG,GACrG,CAAgBC,SAASC,IAAgC,OAGrDC,EAAe,SAAAC,GAAY,IAAD,EACIC,qBADJ,mBACvBC,EADuB,KACZC,EADY,KAa9B,OAVAC,qBAAU,WACJJ,IAAYH,SAASC,IAAgC,KACvDK,EAAa,CACXE,iBAAkBP,6CAClBQ,kBAAmBR,6CACnBS,uBAAwBT,iDAG3B,CAACE,IAEGE,GCbHM,EAAe,CACnBC,SAAU,eACVC,iBAAiB,EACjBC,cAAc,EACdC,UAAW,IACXC,cAAc,EACdC,WAAW,EACXC,cAAUC,GAGNC,EAAkB,CACtBC,cAAe,CACbC,Q,OAASC,EACTC,QAAS,CACPC,SAAU,sCAKVC,EAAY,IAAIC,IAAU,CAAEP,kBAAkBQ,eAAe,IA6E7DC,EAAO,uCAAG,sBAAAC,EAAA,sEACRJ,EAAUG,UADF,2CAAH,qD,OH7CPE,EAnDiB,YACrBjC,EAAUkC,2BAEFC,YAAc,gBACtB,IAAMC,EAAWpC,EAAQoC,SAEzB,OAAO,YAAmB,IAAhBC,EAAe,EAAfA,SACAC,EGcmB,WAAO,IAAD,EACKhC,mBAAS,MADd,mBAC5BgC,EAD4B,KACdC,EADc,OAEDjC,mBAAS,MAFR,mBAE3BkC,EAF2B,KAEjBC,EAFiB,KAwErC,OApEEhC,qBAAU,WAsDN,OArDCmB,EAAUc,gBACXd,EAAUG,UAAUY,MAAK,SAAAH,GACvBC,EAAYD,MACXI,OAAM,SAAAC,GACPC,QAAQC,MAAM,mBAAoBF,MAK7B,OAATjB,QAAS,IAATA,KAAWoB,GAAG,WAAW,SAAAR,GAClBvC,IAAkBgD,SAAS/C,SAASsC,EAASnC,WAKhDoC,EAAYD,GACZU,IAAMC,KAAK,YAAX,aAA0BC,QAAS,aAAgBvC,MALnDqC,IAAMC,KAAK,gCAAX,2BAAiDtC,GAAjD,IAA+DuC,QAAS,mBACxExB,EAAUyB,sBACVd,EAAgB,UAOV,OAARC,QAAQ,IAARA,KAAUQ,GAAG,gBAAgB,SAAA3C,GACtBJ,IAAkBgD,SAAS/C,SAASG,KAKvC6C,IAAMC,KAAK,6BAAX,2BAA8CtC,GAA9C,IAA4DuC,QAAS,oBACrEE,OAAOC,SAASC,WALhBN,IAAMC,KAAK,gCAAX,2BAAiDtC,GAAjD,IAA+DuC,QAAS,mBACxExB,EAAUyB,sBACVC,OAAOC,SAASC,aAQZ,OAARhB,QAAQ,IAARA,KAAUQ,GAAG,mBAAmB,SAAAS,GACN,IAApBA,EAASC,QACXR,IAAMC,KAAK,uBAAX,aAAqCC,QAAS,gBAAmBvC,IACjE0B,EAAgB,MAChBX,EAAUyB,sBACVC,OAAOC,SAASC,WAEhBN,IAAMC,KAAK,gCAAX,aAA8CC,QAAS,gBAAmBvC,IAC1EyC,OAAOC,SAASC,aAKZ,OAARhB,QAAQ,IAARA,KAAUQ,GAAG,cAAc,SAAAD,GACzBG,IAAMH,MAAM,2BAAZ,2BACKlC,GADL,IAEEuC,QAAS,qBAKN,WACG,OAARZ,QAAQ,IAARA,KAAUmB,wBAGf,CAAEnB,IAEL/B,qBAAU,WAER,GAAK+B,EAAU,CACb,IAAMoB,EAAe,IAAIC,IAAOC,UAAU7B,aAAaO,GACvDD,EAAgBqB,MAEjB,CAAEpB,IAEE,CAAEF,eAAcP,WHtFKgC,GAAhBzB,aACF0B,EIXiB,SAACC,GAAsB,IAAD,EACf3D,mBAAS,MADM,mBACxCkC,EADwC,KAC9BC,EAD8B,KAsB/C,OAnBAhC,qBAAU,WACR,GAAIwD,EACFxB,EAAY,WAId,IAAID,EAAJ,CAIA,IAAM0B,EAAkBC,6BAAmBjE,SAASC,IAAgC,IAAK,CACvFiE,QAASjE,mCACTkE,UAAWlE,qCACXmE,OAAQnE,qCAEVsC,EAAYyB,MAEX,CAAC1B,EAAUyB,IAEPzB,EJXY+B,GAAqBjC,GAEhCkC,EAAc,gBAJG,EAMClE,mBAAS,CAC/BmE,KAAMD,EACNE,SAAS,EACTrE,QAAS,KACTmC,SAAU,KACVmC,iBAAkB,OAXG,mBAMhBC,EANgB,KAMVC,EANU,KAwCvB,OA3BApE,qBAAU,YACQ,OAAZ6B,QAAY,IAAZA,OAAA,EAAAA,EAAcE,WAAYvC,IAAkBgD,SAAS/C,SAAQ,OAACoC,QAAD,IAACA,OAAD,EAACA,EAAcE,SAASnC,UACvFwE,EAAQ,CACNJ,KAAM,oBACNC,QAASpC,EAAaE,SAASsC,gBAC/BzE,QAASH,SAASoC,EAAaE,SAASnC,SACxCmC,SAAUF,EACVqC,iBAAkBrC,EAAayC,cAGjCF,EADSb,EACD,CACNS,KAAM,oBACNC,QAAS,KACTrE,QAAS2D,EAASgB,QAAQ3E,QAC1BmC,SAAUwB,EACVW,iBAAkBX,GAGZ,CACNS,KAAMD,EACNE,SAAS,EACTrE,QAAS,KACTmC,SAAU,KACVmC,iBAAkB,SAGrB,CAACrC,EAAc0B,IACX,cAAC5B,EAAD,CAAU6C,MAAOL,EAAjB,SAAwBvC,KAKd6C,GAEfC,EAAU,WACd,OAAOC,qBAAWpF,I,oDK9BLqF,EA1BiB,SAACC,EAAiCC,GAAiB,IAAD,EAClDJ,IAAtBT,EADwE,EACxEA,QAASlC,EAD+D,EAC/DA,SAD+D,EAExClC,mBAASkF,IAAUC,KAAK,IAFgB,mBAExEC,EAFwE,KAE3DC,EAF2D,OAG9CrF,mBAASkF,IAAUC,KAAK,IAHsB,mBAGxEG,EAHwE,KAG7DC,EAH6D,KAuBhF,OAlBApF,qBAAU,WACL+B,IAC8B,OAA/B8C,QAA+B,IAA/BA,KAAiCI,cAAc/C,MAAM,SAAA+C,GACnDC,EAAeD,MACd9C,OAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAM,qBAAsBF,SAEnD,CAAEL,EAAU8C,EAAiCC,IAEhD9E,qBAAU,WACL+B,GAAY+C,GAAeb,IACI,OAA/BY,QAA+B,IAA/BA,KAAiCQ,UAAUpB,GAAS/B,MAAM,SAAAoD,GACzDF,EAAWE,MACVnD,OAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAM,gBAAiBF,SAE9C,CAAEL,EAAU8C,EAAiCC,EAAab,IAItD,CAAEgB,cAAaE,c,kBCVTI,EAdM,SAACC,EAA4BC,EAA0BC,GAAkB,IACpFzB,EAAYS,IAAZT,QADmF,EAEzDpE,mBAASkF,IAAUC,KAAK,IAFiC,mBAEpFW,EAFoF,KAEzEC,EAFyE,KAW3F,OAPA5F,qBAAU,WACFiE,GAAauB,GAAgCC,GACjDA,EAAyBE,UAAU1B,EAASuB,EAA2BK,SAAS3D,MAAK,SAAAyD,GACnFC,EAAaD,MACZxD,OAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAMF,QAE7B,CAAC6B,EAASuB,EAA4BC,EAA0BC,IAC5DC,GL4BHG,EAjCiB,YACrBvG,EAAUkC,2BACFC,YAAc,gBACtB,IAAMC,EAAWpC,EAAQoC,SAGzB,OAAO,YAAmB,IAAhBC,EAAe,EAAfA,SACF6D,EMT0B,WAAO,IAAD,EACFf,IAA9B9E,EADgC,EAChCA,QAASsE,EADuB,EACvBA,iBACXpE,EAAYH,EAAaC,GAFS,EAGwBC,qBAHxB,mBAGjC4F,EAHiC,KAGPM,EAHO,KAexC,OAVA/F,qBAAU,WACR,GAAKJ,GAAYE,GAAcoE,EAC/B,IACE,IAAM8B,EAAW,IAAIC,IAASnG,EAAUG,iBAAkBiG,EAAehC,GACzE6B,EAA4BC,GAC5B,MAAO5D,GACPC,QAAQC,MAAM,mBAAoBF,MAEnC,CAACxC,EAASsE,EAAkBpE,IAExB2F,ENN4BU,GAC3BX,EMwB4B,WAAO,IAAD,EACJd,IAA9B9E,EADkC,EAClCA,QAASsE,EADyB,EACzBA,iBACXpE,EAAYH,EAAaC,GAFW,EAG4BC,qBAH5B,mBAGlC2F,EAHkC,KAGNY,EAHM,KAe1C,OAVApG,qBAAU,WACR,GAAKJ,GAAYE,GAAcoE,EAC/B,IACE,IAAM8B,EAAW,IAAIC,IAASnG,EAAUI,kBAAmBmG,EAAiBnC,GAC5EkC,EAA8BJ,GAC9B,MAAO5D,GACPC,QAAQC,MAAM,qBAAsBF,MAErC,CAACxC,EAASsE,EAAkBpE,IAExB0F,ENvC8Bc,GAC7BzB,EMMiC,WAAO,IAAD,EACTH,IAA9B9E,EADuC,EACvCA,QAASsE,EAD8B,EAC9BA,iBACXpE,EAAYH,EAAaC,GAFgB,EAGiCC,qBAHjC,mBAGvCgF,EAHuC,KAGN0B,EAHM,KAe/C,OAVAvG,qBAAU,WACR,GAAKJ,GAAYE,GAAcoE,EAC/B,IACE,IAAM8B,EAAW,IAAIC,IAASnG,EAAUK,uBAAwBqG,EAAsBtC,GACtFqC,EAAmCP,GACnC,MAAO5D,GACPC,QAAQC,MAAM,2BAA4BF,MAE3C,CAACxC,EAASsE,EAAkBpE,IAExB+E,ENrBmC4B,GAElCf,EOlBc,WAAO,IAAD,EACc7F,mBAAS,GADvB,mBACnB6F,EADmB,KACLgB,EADK,KAElB3E,EAAa2C,IAAb3C,SAoBR,OAlBA/B,qBAAU,WACR,GAAK+B,EAAL,CAEAA,EAAS4E,iBAAiBzE,MAAK,SAAA4C,GAC7B4B,EAAgB5B,MACf3C,MAAME,QAAQC,OAEjB,IAAMqE,EAAiB,SAAA7B,GACrB4B,EAAgB5B,IAKlB,OAFA/C,EAASQ,GAAG,QAASoE,GAEd,WACL5E,EAAS6E,eAAe,QAASD,OAElC,CAAC5E,IAEG2D,EPJcmB,GAEfvB,EQnBc,SAACG,EAA0BC,GAAkB,IAC3DzB,EAAYS,IAAZT,QAD0D,EAEpCpE,mBAASkF,IAAUC,KAAK,IAFY,mBAE3DM,EAF2D,KAElDF,EAFkD,KAYlE,OARApF,qBAAU,WACHiE,GAAYwB,GAEjBA,EAAyBJ,UAAUpB,GAAS/B,MAAK,SAAAoD,GAC/CF,EAAWE,MACVnD,MAAME,QAAQC,SAChB,CAAC2B,EAASwB,EAA0BC,IAEhCJ,EROWwB,CAAgBrB,EAA0BC,GACpDC,EAAYJ,EAAaC,EAA4BC,EAA0BC,GAR9D,EAUYd,EAAyBC,EAAiCa,GAArFT,EAVe,EAUfA,YAAaE,EAVE,EAUFA,UAGf4B,EAAc,CAClBtB,2BACAD,6BACAX,kCACAS,UACAK,YACAR,YACAF,cACA+B,aSrBkC,SAACC,EAAaC,GACpD,UAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAaE,SAAU,MAAO,MACjC,IAAMC,EAAKC,WAAWC,QAAMC,YAAaN,IACnCO,EAAKH,WAAWC,QAAMC,YAAaL,IAEzC,MAAM,GAAN,QADoBE,EAAKI,EAAM,KACVC,QAAQ,GAA7B,MTMuBC,CAAyBvC,EAAWF,IAYzD,OAAO,cAACtD,EAAD,CAAU6C,MAAOuC,EAAjB,SAA+BnF,KAIrB+F,GAEfC,EAAU,WACd,OAAOjD,qBAAWpF,I,iBUlBLsI,EArBC,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,MACxC,MAAe,gBAAZF,EAEC,qBAAKG,UAAWC,IANG,qBAM0BH,GAA7C,SACIC,IAIO,gBAAZF,EAEC,qBAAKG,UAAWC,IAZG,oCAY0BH,GAA7C,SACIC,IAIN,qBAAKC,UAAWC,IAnBC,mCAmBwBH,GAAzC,SACMC,KCTKG,EARC,SAAC,GAAiC,IAA/BJ,EAA8B,EAA9BA,cAAenG,EAAe,EAAfA,SAChC,OACE,qBAAKqG,UAAWC,IALG,4FACF,GAIwCH,GAAzD,SACInG,KCHFwG,EAAkB,SAAC,GAAD,IAAGxG,EAAH,EAAGA,SAAH,OAAkB,qBAAKqG,UAAU,qDAAf,SAAsErG,KAC1GyG,EAAQ,SAAC,GAAD,IAAEzG,EAAF,EAAEA,SAAF,OAAgB,qBAAKqG,UAAU,GAAf,SAAoBrG,KAsBnC0G,EApBa,WAAO,IAAD,EACgBV,IAAxCzC,EADwB,EACxBA,UAAWF,EADa,EACbA,YAAa+B,EADA,EACAA,aAChC,OACE,eAAC,EAAD,CAASe,cAAc,iBAAvB,UACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASD,QAAQ,cAAcE,MAAM,wBACrC,eAAC,EAAD,WAASV,QAAMC,YAAYtC,GAA3B,UAEF,eAAC,EAAD,WACE,cAAC,EAAD,CAAS6C,QAAQ,cAAcE,MAAM,qBACrC,eAAC,EAAD,WAASV,QAAMC,YAAYpC,GAA3B,UAEF,eAAC,EAAD,WACE,cAAC,EAAD,CAAS2C,QAAQ,cAAcE,MAAM,oBACrC,eAAC,EAAD,WAAShB,EAAT,cCHOuB,EAdG,SAAC,GAA2B,IAAzBT,EAAwB,EAAxBA,QAASlG,EAAe,EAAfA,SAC5B,MAAe,gBAAZkG,EAEC,qBAAKG,UAAWC,IALG,0GAKnB,SACItG,IAIN,qBAAKqG,UAAWC,IAXC,QAWjB,SACItG,KCfO,MAA0B,iCCyC1B4G,EArCD,SAAC,GAAyE,IAAvEC,EAAsE,EAAtEA,SAAUjE,EAA4D,EAA5DA,MAAOkE,EAAqD,EAArDA,SAAUpD,EAA2C,EAA3CA,QAASqD,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAc7DC,IAAiBC,IAAQzB,QAAMC,YAAYjC,IAAUd,QAAU,GAErE,OACE,sBAAKyD,UAAU,oBAAf,UACE,sBAAKA,UAAU,uCAAf,UACE,qBAAKA,UAAU,iBAAf,SAAiCQ,IACjC,8BACE,qBAAKO,IAAKJ,EAAMK,IAAI,OAAOhB,UAAU,aAGzC,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,0CAAf,SACE,sBAAKA,UAAU,oCAAf,UACE,gCAAMY,EAAN,eACA,qBAAKZ,UAAU,OAAf,SAAuBX,QAAMC,YAAYjC,UAG7C,uBAAO4D,KAAK,SAASC,KArBV,SAAAR,GACf,MAAO,YAAKS,MAAMT,GAAUU,KAAK,GAAGC,KAAK,KAAMC,MAAM,GAAI,GAAK,IAoB/BC,CAASb,GAAWc,SAAUX,EAAcY,UAAQ,EAAC1F,KAAMyE,EAAUkB,GAAIlB,EAAUjE,MAAOA,EAAOoF,SA9B3G,SAAAlB,GACrB,OAAO,SAAAtG,GACL,IAAIyH,EAAkB,GAChBC,EAAa1H,EAAE2H,OAAOvF,MACxBsF,IAAYD,EAAkBG,KAAKC,IAAIH,EAAYf,IAAQzB,QAAMC,YAAYjC,IAAUd,UAC3FkE,EAASmB,IAyB+HK,CAAexB,GAAWuB,IAAI,IAAIE,IAAK7C,QAAMC,YAAYjC,GAAU2C,UAAS,0CAAqCa,EAAe,gBAAkB,aAAtE,gBAAkGsB,YAAa9C,QAAMC,YAAYjC,Y,SCnCrV+E,EAAS,SAAC,GAA2D,IAAzDzI,EAAwD,EAAxDA,SAAUgH,EAA8C,EAA9CA,KAAMa,EAAwC,EAAxCA,SAAwC,IAA9BxB,iBAA8B,MAAlB,GAAkB,EAAXqC,EAAW,0DACxE,OACE,kDAAYA,GAAZ,IAAkBb,SAAUA,EAAUxB,UAAS,+CAA0CwB,EAAW,gCAAkC,GAAvF,YAA6FxB,GAA5I,SACE,sBAAKA,UAAU,2CAAf,UACE,8BACGrG,IAEFgH,GAAQ,qBAAKX,UAAU,OAAf,SACP,qBAAKe,IAAKJ,EAAMK,IAAI,kB,QCmEfsB,GApEI,SAACzC,GAAa,IACvB7D,EAAYS,IAAZT,QADsB,EAEuD2D,IAA7EtC,EAFsB,EAEtBA,QAASK,EAFa,EAEbA,UAAWF,EAFE,EAEFA,yBAA0BD,EAFxB,EAEwBA,2BAFxB,EAGF3F,mBAAS,GAHP,mBAGtB2K,EAHsB,KAGfC,EAHe,OAIC5K,mBAASkF,IAAUC,KAAK,IAJzB,mBAItB0F,EAJsB,KAIbC,EAJa,OAKQ9K,mBAASiI,GALjB,mBAKtB8C,EALsB,KAKVC,EALU,OCJT,WAAO,IAAD,EACGhL,oBAAS,GADZ,mBACpBiL,EADoB,KACXC,EADW,KAqC3B,MAAO,CAAEC,aAlCYC,uBACnB,SAACC,EAAYC,EAAYC,EAAgBC,EAAeC,EAAgBC,EAAiBC,GAEvF,IAAI7I,EADJoI,GAAW,GAEXG,EAAU,WAAV,cAAcC,IACXjJ,MAAK,SAAAuJ,GAMJ,OALA9I,EAAUF,IAAMiJ,KAAKN,EAAgB,CACnC5K,WAAW,EACXD,cAAc,EACdG,WAAW,IAENiL,QAAQC,IAAI,CAACH,EAAWI,OAAQlJ,OAExCT,MAAK,YAA2B,IAAD,mBAAxB4J,EAAwB,KAAbnJ,EAAa,KAC9BoI,GAAW,GACXtI,IAAMsJ,QAAQpJ,GACW,IAArBmJ,EAAUE,OACZvJ,IAAMH,MAAM+I,GACkB,IAArBS,EAAUE,QACnBvJ,IAAMwJ,QAAQX,GACVC,GAAiBA,KAErB9I,IAAMH,MAAM,gDAEVkJ,GAAmBA,OAExBrJ,OAAM,SAAAG,GACLD,QAAQC,MAAMA,GACdyI,GAAW,GACXtI,IAAMsJ,QAAQpJ,GACdF,IAAMH,MAAM,gFAEf,IAEkBwI,WD3BWoB,GAA1BlB,EANsB,EAMtBA,aAAcF,EANQ,EAMRA,QANQ,EAOIjL,mBAAS,IAPb,mBAOtBsM,EAPsB,KAOZC,EAPY,OAQcvM,oBAAS,GARvB,mBAQtBwM,EARsB,KAQPC,EARO,KAU9BtM,qBAAU,WACRsM,GAAkBxB,GAAYJ,EAAQ6B,GAAG,MACxC,CAACzB,EAASJ,IAEb1K,qBAAU,WACRyK,EAAS,KACR,CAACxG,IAEJjE,qBAAU,WACR2K,EAAWrD,QAAMkF,YAAYhC,GAAS,GAAG/C,QAAQ,IAAK,OACrD,CAAE+C,IAELxK,qBAAU,WACJ2F,EAAU8G,GAAG/B,IACfG,EAAc,iBACTpF,GACH2G,EAAY,CACV3G,EAAyBiH,QACzB,QAAClH,QAAD,IAACA,OAAD,EAACA,EAA4BK,QAASd,IAAUC,KAAK,GAAG2H,IAAI5H,IAAUC,KAAK,MAAM4H,IAAI7H,IAAUC,KAAK,KACpG,qBAAsB,yBAA0B,2BAGlD6F,EAA0B,UAAZ/C,EAAsB,yBAA2B,0BAC1DtC,GAED4G,EADa,UAAZtE,EACW,CACVtC,EAA2BqH,MAC3B,CAACnC,EAAS,IACV,mBAAoB,kBAAmB,gBACvC,WACED,EAAS,GACT2B,EAAY,MAIJ,CACV5G,EAA2BsH,QAC3B,CAACpC,EAAS,IACV,qBAAsB,oBAAqB,kBAC3C,WACED,EAAS,GACT2B,EAAY,UAMrB,CAACzG,EAAW+E,EAASlF,EAA4BC,EAA0BqC,EAAS7D,IAQzF,MAAO,CAAEqB,UAASsF,aAAYyB,gBAAeU,MAN/B,SAAA3K,GACZA,EAAE4K,iBACFhC,EAAY,WAAZ,cAAgBmB,KAIkC3B,QAAOC,aE/C9CwC,GAnBK,WAAO,IAAD,EAC+C1C,GAAW,SAA1EjF,EADgB,EAChBA,QAASsF,EADO,EACPA,WAAYyB,EADL,EACKA,cAAeU,EADpB,EACoBA,MAAOvC,EAD3B,EAC2BA,MAAOC,EADlC,EACkCA,SAC1D,OACE,uBAAMyC,SAAUH,EAAO9E,UAAU,OAAjC,UACE,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,CAAOQ,SAAS,QAAQI,YAAY,QAAQrE,MAAOgG,EAAO9B,SAAU+B,EAAUnF,QAASA,EAASqD,SAAU,GAAIC,KAAMuE,MAEtH,qBAAKlF,UAAU,wBAAf,gEAGA,qBAAKA,UAAU,OAAf,SACE,cAAC,EAAD,CAAQiB,KAAK,SAASO,UAAW4C,EAAjC,SACGzB,UCSIwC,GApBO,WAAO,IAAD,EACoC7C,GAAW,WAAjEK,EADkB,EAClBA,WAAYyB,EADM,EACNA,cAAeU,EADT,EACSA,MAAOvC,EADhB,EACgBA,MAAOC,EADvB,EACuBA,SACzCtF,EAAcyC,IAAdzC,UACR,OACE,uBAAM+H,SAAUH,EAAO9E,UAAU,OAAjC,UACE,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,CAAOQ,SAAS,QAAQI,YAAY,KAAKrE,MAAOgG,EAAO9B,SAAU+B,EAAUnF,QAASH,EAAWwD,SAAU,GAAIC,KAAMuE,MAErH,qBAAKlF,UAAU,wBAAf,kEAGA,qBAAKA,UAAU,OAAf,SACE,cAAC,EAAD,CAAQiB,KAAK,SAASO,UAAW4C,EAAjC,SACGzB,UCNIyC,GATU,WACvB,OACE,eAAC,EAAD,CAAWvF,QAAQ,cAAnB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,QCFAwF,GAAO,SAAC,GAAuB,IAArBpE,EAAoB,EAApBA,KAAMrD,EAAc,EAAdA,QACZjG,EAAY8E,IAAZ9E,QACF2E,EAAoC,IAA1B9E,SAASG,EAAS,IAAY,WAAa,GACrD2N,EAAY,kBAAchJ,EAAd,gCAA6CsB,GAC/D,OAAO,oBAAG2H,KAAMD,EAAcxD,OAAO,SAAS0D,IAAI,sBAA3C,kBAAuEvE,EAAvE,6BAyBMwE,GAtBF,WAAO,IACV9N,EAAY8E,IAAZ9E,QACFE,EAAYH,EAAaC,GAE/B,OACE,sBAAKqI,UAAU,wBAAf,UACE,cAAC,EAAD,CAASH,QAAQ,cAAcE,MAAM,2BACrC,sBAAKC,UAAU,sBAAf,UACE,qBAAKA,UAAU,4CAAf,SACE,cAAC,GAAD,CAAMiB,KAAK,UAAUrD,QAAO,OAAE/F,QAAF,IAAEA,OAAF,EAAEA,EAAWI,sBAE3C,qBAAK+H,UAAU,OAAf,eACA,qBAAKA,UAAU,4CAAf,SACE,cAAC,GAAD,CAAMiB,KAAK,gBAAgBrD,QAAO,OAAE/F,QAAF,IAAEA,OAAF,EAAEA,EAAWK,8BAGnD,cAAC,EAAD,IACA,cAAC,GAAD,Q,UCfSwN,GAbA,WAAO,IACZ3J,EAASU,IAATV,KAER,OACE,qBAAKiE,UAAU,6BAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,oCAAO2F,GAAYC,QAAZD,cACP,8BAAM5J,UCVD8J,GAAW,SAACC,EAASC,EAAQC,EAAWC,GACnD,GAAIH,EAAQ9K,QAAU+K,EAAQ,OAAOD,EAIrC,IACMI,EAAcH,GAHpBC,EAAYA,GAAa,OAEAhL,OAEnBmL,EAAapE,KAAKqE,KAAKH,GAAaC,EAAc,EAAI,GACtDG,EAAYtE,KAAKuE,MAAMJ,EAAc,EAAI,GAE/C,OAAOJ,EAAQS,OAAO,EAAGJ,GAAcH,EAAYF,EAAQS,OAAOT,EAAQ9K,OAASqL,ICVtE,OAA0B,iCCyB1BG,GAnBQ,WAAO,IAClBxK,EAAYS,IAAZT,QAER,OAAIA,EAEA,sBAAKgE,UAAU,0CAAf,UACK6F,GAAS7J,EAAS,GAAI,MAAO,GAC9B,qBAAK+E,IAAKJ,GAAMK,IAAI,GAAGhB,UAAU,YAKrC,wBAAQA,UAAU,+BAA+ByG,QAAS,kBAAMpN,KAAhE,mCClBO,OAA0B,mCCwB1BqN,GAnBA,WACb,OACE,sBAAK1G,UAAU,+CAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKe,IAAKmE,EAAMlE,IAAI,WAGtB,sBAAKhB,UAAU,mCAAf,UACE,8BACE,qBAAKe,IAAK4F,GAAQ3F,IAAI,SAAShB,UAAU,OAE3C,qBAAKA,UAAU,8BAAf,SACE,cAAC,GAAD,aCPK4G,GARI,SAAC,GAAkB,IAAhBjN,EAAe,EAAfA,SACpB,OACE,qBAAKqG,UAAU,uDAAf,SACGrG,KCWQkN,GAVH,WACV,OACE,eAAC,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,QCCSC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/M,MAAK,YAAkD,IAA/CgN,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjO,EAAD,UACE,eAACsE,EAAD,WACE,cAAC,GAAD,IACA,cAAC,IAAD,CAAgB4J,aAAa,WAInCC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.b1f0ccf2.chunk.js","sourcesContent":["import { useEffect, useState, createContext, useContext } from 'react'\nimport { useFallbackConnect } from './fallback'\nimport { useUserSuppliedConnect } from './userSupplied'\nimport { supportedChains } from './chains'\n\nlet context\n\nconst createWeb3Root = () => {\n  context = createContext()\n\n  context.displayName = 'Web3 Provider'\n  const Provider = context.Provider\n\n  return ({ children }) => {\n    const { userSupplied }= useUserSuppliedConnect()\n    const fallback = useFallbackConnect(!!userSupplied)\n\n    const defaultName = 'Not connected'\n\n    const [web3, setWeb3] = useState({\n      name: defaultName,\n      account: false,\n      chainId: null,\n      provider: null,\n      signerOrProvider: null,\n    })\n    useEffect(() => {\n      if (userSupplied?.provider && supportedChains().includes(parseInt(userSupplied?.provider.chainId))) {\n        setWeb3({\n          name: 'Injected provider',\n          account: userSupplied.provider.selectedAddress,\n          chainId: parseInt(userSupplied.provider.chainId),\n          provider: userSupplied,\n          signerOrProvider: userSupplied.getSigner(),\n        })\n      } else if (fallback) {\n        setWeb3({\n          name: 'Fallback provider',\n          account: null,\n          chainId: fallback.network.chainId,\n          provider: fallback,\n          signerOrProvider: fallback,\n        })\n      } else {\n        setWeb3({\n          name: defaultName,\n          account: false,\n          chainId: null,\n          provider: null,\n          signerOrProvider: null,\n        })\n      }\n    }, [userSupplied, fallback])\n    return <Provider value={web3}>{children}</Provider>\n  }\n}\n\n\nconst Web3Provider = createWeb3Root()\n\nconst useWeb3 = () => {\n  return useContext(context)\n}\n\nexport { Web3Provider, useWeb3 }\n","import { createContext, useContext } from 'react'\nimport { useSarcophagusStakingContract, useSarcophagusTokenContract, useSarcophagusVotingRightsContract } from './useContracts'\nimport { useSarcoBalance } from './useBalance'\nimport { useCurrentBlock } from './useBlocks'\nimport useVotingRightsContract from './useVotingRightsContract'\nimport { getVotingRightPercentage } from '../../utils/bigNumbers'\nimport useAllowance from './useAllowance'\n\nlet context\n\nconst createDataRoot = () => {\n  context = createContext()\n  context.displayName = 'Data Provider'\n  const Provider = context.Provider\n\n  \n  return ({ children }) => {\n    const sarcophagusTokenContract = useSarcophagusTokenContract()\n    const sarcophagusStakingContract = useSarcophagusStakingContract()\n    const sarcophagusVotingRightsContract = useSarcophagusVotingRightsContract()\n    \n    const currentBlock = useCurrentBlock()\n\n    const balance = useSarcoBalance(sarcophagusTokenContract, currentBlock)\n    const allowance = useAllowance(sarcophagusStakingContract, sarcophagusTokenContract, currentBlock)\n\n    const { totalSupply, vrBalance } = useVotingRightsContract( sarcophagusVotingRightsContract, currentBlock )\n    const votingRights = getVotingRightPercentage(vrBalance, totalSupply)\n\n    const dataContext = {\n      sarcophagusTokenContract,\n      sarcophagusStakingContract,\n      sarcophagusVotingRightsContract,\n      balance,\n      allowance,\n      vrBalance,\n      totalSupply,\n      votingRights,\n    }\n    return <Provider value={dataContext}>{children}</Provider>\n  }\n}\n\nconst DataProvider = createDataRoot()\n\nconst useData = () => {\n  return useContext(context)\n}\n\nexport { DataProvider, useData }","import { useState, useEffect } from 'react'\n\nconst supportedChains = () => {\n  const dev = process.env.NODE_ENV !== 'production' ? [parseInt(process.env.REACT_APP_CHAIN_ID, 10)] : []\n  return [...dev, parseInt(process.env.REACT_APP_CHAIN_ID, 10)]\n}\n\nconst useAddresses = chainId => {\n  const [addresses, setAddresses] = useState()\n\n  useEffect(() => {\n    if (chainId === parseInt(process.env.REACT_APP_CHAIN_ID, 10)) {\n      setAddresses({\n        sarcophagusToken: process.env.REACT_APP_SARCO_TOKEN_ADDRESS,\n        SarcoStakingProxy: process.env.REACT_APP_SARCO_STAKING_PROXY_ADDRESS,\n        SarcoVotingRightsProxy: process.env.REACT_APP_SARCO_VOTING_RIGHTS_PROXY_ADDRESS\n      })\n    }\n  }, [chainId])\n\n  return addresses\n}\n\nexport {\n  supportedChains,\n  useAddresses\n} ","import { useState, useEffect } from 'react'\nimport { ethers } from 'ethers'\nimport { toast } from 'react-toastify'\nimport Web3Modal from 'web3modal'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { supportedChains } from './chains'\n\nconst toastOptions = {\n  position: \"bottom-right\",\n  hideProgressBar: false,\n  closeOnClick: true,\n  autoClose: 3000,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n}\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: \"27e484dcd9e3efcfd25a83a78777cdf1\",\n    },\n  },\n}\n\nconst web3Modal = new Web3Modal({ providerOptions , cacheProvider: true})\n\nconst useUserSuppliedConnect = () => {\n  const [userSupplied, setUserSupplied] = useState(null)\n  const [ provider, setProvider ] = useState(null)\n\n  useEffect(() => {\n    if(web3Modal.cachedProvider) {\n      web3Modal.connect().then(provider => {\n        setProvider(provider)\n      }).catch(e => {\n        console.error(\"error connecting\", e)\n      })\n    }\n\n    // subscribe to connect events\n    web3Modal?.on('connect', provider => {\n      if (!supportedChains().includes(parseInt(provider.chainId))) {\n        toast.dark('Switch to a supported network', { ...toastOptions, toastId: 'switchNetwork' })\n        web3Modal.clearCachedProvider()\n        setUserSupplied(null)\n      } else {\n        setProvider(provider)\n        toast.dark('Connected', { toastId: 'connected', ...toastOptions })\n      }\n    })\n      // subscribe to Network events\n      provider?.on('chainChanged', chainId => {\n        if (!supportedChains().includes(parseInt(chainId))) {\n          toast.dark('Switch to a supported network', { ...toastOptions, toastId: 'switchNetwork' })\n          web3Modal.clearCachedProvider()\n          window.location.reload()\n        } else {\n          toast.dark('Network changed, reloading', { ...toastOptions, toastId: 'changedNetwork' })\n          window.location.reload()\n        }\n      })\n      \n      // subscribe to account change events\n      provider?.on('accountsChanged', accounts => {\n        if (accounts.length === 0) {\n          toast.dark('Account disconnected', { toastId: 'disconnected', ...toastOptions })\n          setUserSupplied(null)\n          web3Modal.clearCachedProvider()\n          window.location.reload()\n        } else {\n          toast.dark('Account Changed, reloading...', { toastId: 'disconnected', ...toastOptions })\n          window.location.reload()\n        }\n      })\n      \n      // subscribe to provider disconnection\n      provider?.on(\"disconnect\", error => {\n        toast.error('Disconnected from wallet', {\n          ...toastOptions,\n          toastId: 'Disconnected'\n        })\n      });\n\n      // unsubscribe\n      return () => {\n        provider?.removeAllListeners()\n      }\n    \n}, [ provider ])\n\nuseEffect(() => {\n  // set web3Provider\n  if(!!provider) {\n    const web3Provider = new ethers.providers.Web3Provider(provider)\n    setUserSupplied(web3Provider)\n  }\n}, [ provider ])\n\nreturn { userSupplied, connect }\n}\n\nconst connect = async () => {\n  await web3Modal.connect()\n\n}\n\nexport { useUserSuppliedConnect, connect }","\nimport { useState, useEffect } from 'react'\nimport { getDefaultProvider } from 'ethers'\n\nconst useFallbackConnect = (previousProvider) => {\n  const [provider, setProvider] = useState(null)\n\n  useEffect(() => {\n    if (previousProvider) {\n      setProvider(null)\n      return\n    }\n\n    if (provider) {\n      return\n    }\n\n    const defaultProvider = getDefaultProvider(parseInt(process.env.REACT_APP_CHAIN_ID, 10), {\n      alchemy: process.env.REACT_APP_ALCHEMY_KEY,\n      etherscan: process.env.REACT_APP_ETHERSCAN_KEY,\n      infura: process.env.REACT_APP_INFURA_KEY,\n    })\n    setProvider(defaultProvider)\n\n  }, [provider, previousProvider])\n\n  return provider\n}\n\nexport { useFallbackConnect }","import { BigNumber } from \"@ethersproject/bignumber\"\nimport { useEffect } from \"react\"\nimport { useState } from \"react\"\nimport { useWeb3 } from \"../../web3\"\n\nconst useVotingRightsContract = (sarcophagusVotingRightsContract, blockNumber) => {\n  const { account, provider } = useWeb3()\n  const [ totalSupply, setTotalSupply ] = useState(BigNumber.from(0))\n  const [ vrBalance, setBalance ] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if(provider) {\n      sarcophagusVotingRightsContract?.totalSupply().then( totalSupply => {\n        setTotalSupply(totalSupply)\n      }).catch(e => console.error('Error total supply', e))\n    }\n  }, [ provider, sarcophagusVotingRightsContract, blockNumber ])\n\n  useEffect(() => {\n    if(provider && blockNumber && account) {\n       sarcophagusVotingRightsContract?.balanceOf(account).then( balance => {\n        setBalance(balance)\n      }).catch(e => console.error('Error balance', e))\n    }\n  }, [ provider, sarcophagusVotingRightsContract, blockNumber, account ])\n  \n\n\n  return { totalSupply, vrBalance }\n}\n\nexport default useVotingRightsContract","import { BigNumber } from \"@ethersproject/bignumber\"\nimport { useEffect, useState } from \"react\"\nimport { useWeb3 } from \"../../web3\"\n\nconst useAllowance = (sarcophagusStakingContract, sarcophagusTokenContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [allowance, setAllowance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!!account && !!sarcophagusStakingContract && !!sarcophagusTokenContract) {\n      sarcophagusTokenContract.allowance(account, sarcophagusStakingContract.address).then(allowance => {\n        setAllowance(allowance)\n      }).catch(e => console.error(e))\n    }\n  }, [account, sarcophagusStakingContract, sarcophagusTokenContract, currentBlock])\n  return allowance\n}\n\nexport default useAllowance","import { useEffect, useState } from 'react'\nimport { Contract } from 'ethers'\nimport { useWeb3 } from '../../web3'\nimport { useAddresses } from '../../web3/chains'\nimport SarcoTokenABI from '../artifacts/SarcoToken.json'\nimport SarcoStakingABI from '../artifacts/SarcoStaking.json'\nimport SarcoVotingRightsABI from '../artifacts/SarcoVotingRights.json'\n\nconst useSarcophagusTokenContract = () => {\n  const { chainId, signerOrProvider } = useWeb3()\n  const addresses = useAddresses(chainId)\n  const [sarcophagusTokenContract, setSarcophagusTokenContract] = useState()\n\n  useEffect(() => {\n    if (!chainId || !addresses || !signerOrProvider) return\n    try {\n      const contract = new Contract(addresses.sarcophagusToken, SarcoTokenABI, signerOrProvider)\n      setSarcophagusTokenContract(contract)\n    } catch (e) {\n      console.error('Token Contract: ', e)\n    }\n  }, [chainId, signerOrProvider, addresses])\n\n  return sarcophagusTokenContract\n}\nconst useSarcophagusVotingRightsContract = () => {\n  const { chainId, signerOrProvider } = useWeb3()\n  const addresses = useAddresses(chainId)\n  const [ sarcophagusVotingRightsContract, setSarcophagusVotingRightsContract ] = useState()\n\n  useEffect(() => {\n    if (!chainId || !addresses || !signerOrProvider) return\n    try {\n      const contract = new Contract(addresses.SarcoVotingRightsProxy, SarcoVotingRightsABI, signerOrProvider)\n      setSarcophagusVotingRightsContract(contract)\n    } catch (e) {\n      console.error('Voting Rights Contract: ', e)\n    }\n  }, [chainId, signerOrProvider, addresses])\n\n  return sarcophagusVotingRightsContract\n}\nconst useSarcophagusStakingContract = () => {\n  const { chainId, signerOrProvider } = useWeb3()\n  const addresses = useAddresses(chainId)\n  const [ sarcophagusStakingContract, setSarcophagusStakingContract ] = useState()\n\n  useEffect(() => {\n    if (!chainId || !addresses || !signerOrProvider) return\n    try {\n      const contract = new Contract(addresses.SarcoStakingProxy, SarcoStakingABI, signerOrProvider)\n      setSarcophagusStakingContract(contract)\n    } catch (e) {\n      console.error('Staking Contract: ', e)\n    }\n  }, [chainId, signerOrProvider, addresses])\n\n  return sarcophagusStakingContract\n}\n\n\n\nexport { \n  useSarcophagusTokenContract,\n  useSarcophagusVotingRightsContract,\n  useSarcophagusStakingContract\n }\n","import { useEffect, useState } from \"react\"\nimport { useWeb3 } from \"../../web3\"\n\nconst useCurrentBlock = () => {\n    const [currentBlock, setCurrentBlock] = useState(0)\n    const { provider } = useWeb3()\n  \n    useEffect(() => {\n      if (!provider) return\n  \n      provider.getBlockNumber().then(blockNumber => {\n        setCurrentBlock(blockNumber)\n      }).catch(console.error)\n  \n      const getBlockNumber = blockNumber => {\n        setCurrentBlock(blockNumber)\n      }\n  \n      provider.on('block', getBlockNumber)\n  \n      return () => {\n        provider.removeListener('block', getBlockNumber)\n      }\n    }, [provider])\n  \n    return currentBlock\n  }\n\nexport {\n    useCurrentBlock\n}","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3 } from '../../web3'\n\nconst useSarcoBalance = (sarcophagusTokenContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [balance, setBalance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !sarcophagusTokenContract) return\n\n    sarcophagusTokenContract.balanceOf(account).then(balance => {\n      setBalance(balance)\n    }).catch(console.error)\n  }, [account, sarcophagusTokenContract, currentBlock])\n\n  return balance\n}\n\nexport { useSarcoBalance }","import { utils } from \"ethers\"\nimport numeral from \"numeral\"\n\nexport const makeNumeral = (bigNumber, decimals) => {\n  return numeral(utils.formatUnits(bigNumber, decimals))\n}\n\nexport const getDecimalNumber = (bigNumber, decimals) => {\n  return makeNumeral(bigNumber, decimals).value()\n}\n\nexport const getNumberalString = (bigNumber, decimals, isFixed) => {\n  if(isFixed) return makeNumeral(bigNumber, decimals).value().toFixed().toString()\n  return makeNumeral(bigNumber, decimals).input()\n}\n\nexport const getVotingRightPercentage = (vrBalanceBN, totalSupplyBN) => {\n  if(vrBalanceBN?.isZero()) return '0 %'\n  const vr = parseFloat(utils.formatEther((vrBalanceBN)))\n  const ts = parseFloat(utils.formatEther((totalSupplyBN)))\n  const percentage = (vr / ts) * 100\n  return `${percentage.toFixed(9)} %`\n}","import React from 'react'\nimport classnames from 'classnames'\n\nconst BASE_DEFAULT = \"font-normal text-base text-white\"\nconst BASE_HEADING_ONE = \"text-xl text-white\"\nconst BASE_HEADING_TWO = \"text-gray-400 font-normal text-sm\"\n\nconst Heading = ({varient, addClassnames, label}) => {\n  if(varient === \"heading-one\") {\n    return (\n      <div className={classnames(BASE_HEADING_ONE, addClassnames)}>\n        { label }\n      </div>\n    )\n  }\n  if(varient === \"heading-two\") {\n    return (\n      <div className={classnames(BASE_HEADING_TWO, addClassnames)}>\n        { label }\n      </div>\n    )\n  } else return (\n    <div className={classnames(BASE_DEFAULT, addClassnames)}>\n        { label }\n    </div>\n  )\n}\n\nexport default Heading","import React from 'react'\nimport classnames from 'classnames'\n\nconst BORDER_DEFAULT = \"border-t border-b border-gray-500 w-full flex justify-around items-center flex-wrap gap-4\"\nconst BASE_DEFAULT = \"\"\n\nconst Section = ({ addClassnames, children }) => {\n  return (\n    <div className={classnames(BORDER_DEFAULT, BASE_DEFAULT, addClassnames)}>\n      { children }\n    </div>\n  )\n}\n\nexport default Section","import { utils } from 'ethers'\nimport React from 'react'\nimport { useData } from '../../context/blockchain'\nimport Heading from '../layout/Heading'\nimport Section from '../layout/Section'\n\nconst ColumnContainer = ({ children }) => <div className=\"flex flex-col items-center whitespace-no-wrap w-48\">{ children }</div>\nconst Value = ({children}) => <div className=\"\">{ children }</div>\n\nconst BlockchainContainer = () => {\n  const { vrBalance, totalSupply, votingRights} = useData()\n  return (\n    <Section addClassnames=\"mt-6 py-8 flex\">\n      <ColumnContainer>\n        <Heading varient=\"heading-two\" label=\"Total Voting Rights\" />\n        <Value>{ utils.formatEther(totalSupply) } </Value>\n      </ColumnContainer>\n      <ColumnContainer>\n        <Heading varient=\"heading-two\" label=\"My Voting Rights\" />\n        <Value>{ utils.formatEther(vrBalance) } </Value>\n      </ColumnContainer>\n      <ColumnContainer>\n        <Heading varient=\"heading-two\" label=\"My Voting Power\" />\n        <Value>{ votingRights } </Value>\n      </ColumnContainer>\n    </Section>\n  )\n}\n\nexport default BlockchainContainer","import React from 'react'\nimport classnames from 'classnames'\n\nconst BASE_DEFAULT = \"pt-8\"\nconst BASE_WITH_BORDER = \"border-b border-l border-r w-full border-gray-500 py-16 px-8 mb-8 flex justify-around flex-wrap gap-12\"\n\nconst Container = ({ varient, children }) => {\n  if(varient === 'with-border') {\n    return (\n      <div className={classnames(BASE_WITH_BORDER)}>\n        { children }\n      </div>\n    )\n  } else return (\n    <div className={classnames(BASE_DEFAULT)}>\n      { children }\n    </div>\n  )\n}\n\nexport default Container","export default __webpack_public_path__ + \"static/media/logo.46d0239c.png\";","import { utils } from \"ethers\"\nimport numeral from \"numeral\"\nimport React  from \"react\"\n\nconst Input = ({ currency, value, setValue, balance, decimals, icon, balanceName }) => {\n  const calculateValue = setValue => {\n    return e => {\n      let normalizedValue = \"\"\n      const inputValue = e.target.value\n      if (inputValue) normalizedValue = Math.min(inputValue, numeral(utils.formatEther(balance)).value())\n      setValue(normalizedValue)\n    }\n  }\n\n  const makeStep = decimals => {\n    return `0.${Array(decimals).fill(0).join('')}`.slice(0, -1) + '1'\n  }\n\n  const inputDisable = !(numeral(utils.formatEther(balance)).value() > 0)\n\n  return (\n    <div className=\"flex mb-4 text-sm\">\n      <div className=\"mr-4 flex flex-col items-center w-10\">\n        <div className=\"uppercase mb-2\">{currency}</div>\n        <div>\n          <img src={icon} alt=\"icon\" className=\"w-8\"/>\n        </div>\n      </div>\n      <div className=\"w-full\">\n        <div className=\"flex justify-between mb-2 text-gray-400\">\n          <div className=\"flex flex-wrap justify-end w-full\">\n            <div>{balanceName} Balance:</div>\n            <div className=\"ml-1\">{utils.formatEther(balance)}</div>\n          </div>\n        </div>\n        <input type=\"number\" step={makeStep(decimals)} disabled={inputDisable} required name={currency} id={currency} value={value} onChange={calculateValue(setValue)} min=\"1\" max={utils.formatEther(balance)} className={`w-full border-2 border-gray-500 ${inputDisable ? 'text-gray-400' : 'text-white'} bg-gray-900`} placeholder={utils.formatEther(balance)} />\n      </div>\n    </div>\n  )\n}\n\nexport default Input","const Button = ({ children, icon, disabled, className = \"\", ...rest }) => {\n  return (\n    <button {...rest} disabled={disabled} className={`border-2 border-white p-2 min-w-full ${disabled ? \"opacity-50 cursor-not-allowed\" : \"\"} ${className}`}>\n      <div className=\"flex justify-center text-sm items-center\">\n        <div>\n          {children}\n        </div>\n        {icon && <div className=\"ml-3\">\n          <img src={icon} alt=\"icon\" />\n        </div>}\n      </div>\n    </button>\n  )\n}\n\nexport { Button }","import { BigNumber } from \"@ethersproject/bignumber\"\nimport { utils } from \"ethers\"\nimport { useEffect, useState } from \"react\"\nimport { useData } from \"../../context/blockchain\"\nimport { useTransaction } from \"../../context/blockchain/useTransaction\"\nimport { useWeb3 } from \"../../web3\"\n\nconst useStaking = (varient) => {\n  const { account } = useWeb3()\n  const { balance, allowance, sarcophagusTokenContract, sarcophagusStakingContract } = useData()\n  const [ sarco, setSarco ] = useState(0)\n  const [ sarcoBN, setSarcoBN] = useState(BigNumber.from(0))\n  const [ buttonText, setButtonText ] = useState(varient)\n  const { contractCall, pending } = useTransaction()\n  const [ callData, setCallData ] = useState([])\n  const [ buttonEnabled, setButtonEnabled ] = useState(false)\n  \n  useEffect(() => {\n    setButtonEnabled(!pending && (sarcoBN.gt(0)))\n  }, [pending, sarcoBN])\n\n  useEffect(() => {\n    setSarco(0)\n  }, [account])\n\n  useEffect(() => {\n    setSarcoBN(utils.parseUnits((sarco || 0).toFixed(18), 18))\n  }, [ sarco ])\n\n  useEffect(() => {\n    if (allowance.lt(sarcoBN)) {\n      setButtonText(\"Approve SARCO\")\n      if ( sarcophagusTokenContract ) {\n        setCallData([\n          sarcophagusTokenContract.approve,\n          [sarcophagusStakingContract?.address, BigNumber.from(2).pow(BigNumber.from(256)).sub(BigNumber.from(1))],\n          \"Approving SARCO...\", \"SARCO approval failed!\", \"SARCO approval made!\"\n        ])}\n      } else {\n        setButtonText(varient === \"Stake\" ? \"Increase Voting Rights\" : \"Decrease Voting Rights\")\n        if ( sarcophagusStakingContract ) {\n          if(varient === 'Stake'){\n            setCallData([\n              sarcophagusStakingContract.stake,\n              [sarcoBN, { }],\n              \"Staking SARCO...\", \"Staking failed!\", \"Staking made!\",\n              () => {\n                setSarco(0)\n                setCallData([])\n              }\n            ])\n          } else {\n            setCallData([\n              sarcophagusStakingContract.unstake,\n              [sarcoBN, { }],\n              \"Unstaking SARCO...\", \"Unstaking failed!\", \"Unstaking made!\",\n              () => {\n                setSarco(0)\n                setCallData([])\n              }\n            ])\n          }\n        }\n      }\n    }, [allowance, sarcoBN, sarcophagusStakingContract, sarcophagusTokenContract, varient, account])\n\n  const calls = e => {\n    e.preventDefault()\n    contractCall(...callData)\n  }\n\n  \n  return { balance, buttonText, buttonEnabled, calls, sarco, setSarco } \n}\n\nexport default useStaking","import { useState, useCallback } from 'react'\nimport { toast } from 'react-toastify'\n\nconst useTransaction = () => {\n  const [pending, setPending] = useState(false)\n\n  const contractCall = useCallback(\n    (contractFn, parameters, pendingMessage, failedMessage, successMessage, successCallback, completedCallback) => {\n      setPending(true)\n      let toastId\n      contractFn(...parameters)\n        .then(txResponse => {\n          toastId = toast.info(pendingMessage, {\n            autoClose: false,\n            closeOnClick: false,\n            draggable: false\n          })\n          return Promise.all([txResponse.wait(), toastId])\n        })\n        .then(([txReceipt, toastId]) => {\n          setPending(false)\n          toast.dismiss(toastId)\n          if (txReceipt.status === 0) {\n            toast.error(failedMessage)\n          } else if (txReceipt.status === 1) {\n            toast.success(successMessage)\n            if (successCallback) successCallback()\n          } else {\n            toast.error(\"Not sure what happened with that transaction\")\n          }\n          if (completedCallback) completedCallback()\n        })\n        .catch(error => {\n          console.error(error)\n          setPending(false)\n          toast.dismiss(toastId)\n          toast.error(\"There was an error! Check your browser's console logs for more details.\")\n        })\n    }, [])\n\n  return { contractCall, pending }\n}\n\nexport { useTransaction }","import React from 'react'\nimport logo from '../../assets/images/logo.png'\nimport Input from '../forms/Input'\nimport { Button } from '../forms/Button'\nimport useStaking from '../hooks/useStaking'\n\nconst StakingForm = () => {\n  const { balance, buttonText, buttonEnabled, calls, sarco, setSarco } = useStaking(\"Stake\")\n  return (\n    <form onSubmit={calls} className=\"w-72\">\n      <div className=\"mt-2 flex flex-col\">\n        <Input currency=\"sarco\" balanceName=\"SARCO\" value={sarco} setValue={setSarco} balance={balance} decimals={18} icon={logo} />\n      </div>\n      <div className=\"text-sm text-gray-400\">\n        Stake SARCO to increase your Voting Rights balance\n      </div>\n      <div className=\"mt-4\">\n        <Button type=\"submit\" disabled={!buttonEnabled}>\n          {buttonText}\n        </Button>\n      </div>\n    </form>\n  )\n}\n\nexport default StakingForm","import React from 'react'\nimport logo from '../../assets/images/logo.png'\nimport Input from '../forms/Input'\nimport { Button } from '../forms/Button'\nimport useStaking from '../hooks/useStaking'\nimport { useData } from '../../context/blockchain'\n\nconst UnStakingForm = () => {\n  const { buttonText, buttonEnabled, calls, sarco, setSarco } = useStaking(\"Unstake\")\n  const { vrBalance } = useData()\n  return (\n    <form onSubmit={calls} className=\"w-72\">\n      <div className=\"mt-2 flex flex-col\">\n        <Input currency=\"sarco\" balanceName=\"VR\" value={sarco} setValue={setSarco} balance={vrBalance} decimals={18} icon={logo} />\n      </div>\n      <div className=\"text-sm text-gray-400\">\n        Unstake SARCO to decrease your Voting Rights balance\n      </div>\n      <div className=\"mt-4\">\n        <Button type=\"submit\" disabled={!buttonEnabled}>\n          {buttonText}\n        </Button>\n      </div>\n    </form>\n  )\n}\n\nexport default UnStakingForm","import React from 'react'\nimport Container from '../layout/Container'\nimport StakingForm from './StakingForm'\nimport UnStakingForm from './UnStakingForm'\n\nconst StakingContainer = () => {\n  return (\n    <Container varient=\"with-border\">\n      <StakingForm />\n      <UnStakingForm />\n    </Container>\n  )\n}\n\nexport default StakingContainer","import React from 'react'\nimport { useWeb3 } from '../web3'\nimport { useAddresses } from '../web3/chains'\nimport BlockchainContainer from './BlockchainContainer'\nimport Heading from './layout/Heading'\nimport StakingContainer from './StakingContainer'\n\nconst Link = ({ type, address }) => {\n  const { chainId } = useWeb3()\n  const network = parseInt(chainId, 10) === 4 ? \"rinkeby.\" : \"\"\n  const etherscanURL = `https://${network}etherscan.io/address/${address}`\n  return <a href={etherscanURL} target=\"_blank\" rel=\"noreferrer noopener\">View {type} Contract on Etherscan</a>\n}\n\nconst Body = () => {\n  const { chainId } = useWeb3()\n  const addresses = useAddresses(chainId)\n\n  return (\n    <div className=\"flex-grow text-center\">\n      <Heading varient=\"heading-one\" label=\"Sarcophagus Governance\" />\n      <div className=\"flex justify-center\">\n        <div className=\"mt-2 underline text-gray-400 text-sm mr-2\">\n          <Link type=\"Staking\" address={addresses?.SarcoStakingProxy} />\n        </div>\n        <div className=\"mt-1\">/</div>\n        <div className=\"mt-2 underline text-gray-400 text-sm ml-2\">\n          <Link type=\"Voting Rights\" address={addresses?.SarcoVotingRightsProxy} />\n        </div>\n      </div>\n      <BlockchainContainer />\n      <StakingContainer />\n    </div>\n  )\n}\n\nexport default Body","import { useWeb3 } from '../web3'\nimport packageJson from '../../package.json'\n\nconst Footer = () => {\n  const { name } = useWeb3()\n\n  return (\n    <div className=\"text-gray-400 text-xs my-4\">\n      <div className=\"flex justify-between pb-6\">\n        <div>v{packageJson.version + '+' + process.env.REACT_APP_GIT_HASH}</div>\n        <div>{name}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer","export const truncate = (fullStr, strLen, separator, sepLength) => {\n  if (fullStr.length <= strLen) return fullStr;\n\n  separator = separator || '...'\n\n  const sepLen = separator.length\n  const charsToShow = strLen - sepLen\n  const frontChars = Math.ceil(sepLength || charsToShow / 2 + 1) // accounts for the \"0x\"\n  const backChars = Math.floor(charsToShow / 2 - 1) // accounts for the \"0x\"\n\n  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n}","export default __webpack_public_path__ + \"static/media/icon.081a5d9a.svg\";","import React from 'react'\nimport { truncate } from '../../utils'\nimport { useWeb3 } from '../../web3'\nimport icon from '../../assets/images/icon.svg'\nimport { connect } from '../../web3/userSupplied'\n\nconst AccountDisplay = () => {\n    const { account } = useWeb3()\n\n    if (account) {\n        return (\n        <div className=\"flex justify-center items-center w-full\">\n            {truncate(account, 19, '...', 7)}\n            <img src={icon} alt=\"\" className=\"ml-6\" />\n        </div>\n        )\n    } else {\n        return (\n        <button className=\"underline text-center w-full\" onClick={() => connect()}>\n            Connect Web3 Account\n        </button>\n        )\n    }\n}\n\nexport default AccountDisplay","export default __webpack_public_path__ + \"static/media/wallet.7d4fae45.svg\";","import React  from 'react'\nimport AccountDisplay from './AccountDisplay'\nimport logo from '../../assets/images/logo.png'\nimport wallet from '../../assets/images/wallet.svg'\n\nconst Header = () => {\n  return (\n    <div className=\"flex items-center justify-between pt-2 mb-16\">\n      <div className=\"w-24 p-1\">\n        <img src={logo} alt=\"logo\" />\n      </div>\n\n      <div className=\"flex items-center justify-center\">\n        <div>\n          <img src={wallet} alt=\"wallet\" className=\"\" />\n        </div>\n        <div className=\"ml-3 text-sm text-gray-300 \">\n          <AccountDisplay />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header","import React from 'react'\n\nconst AppWrapper = ({ children }) => {\n  return (\n    <div className=\"container min-h-screen flex flex-col justify-between\">\n      {children}\n    </div>\n  )\n}\n\nexport default AppWrapper","import Body from \"./components/Body\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/header\";\nimport AppWrapper from \"./components/layout/AppWrapper\";\n\n\nconst App = () => {\n  return (\n    <AppWrapper>\n      <Header />\n      <Body />\n      <Footer />\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Web3Provider } from './web3/index';\nimport { DataProvider } from './context/blockchain'\nimport reportWebVitals from './reportWebVitals';\nimport { ToastContainer } from 'react-toastify';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3Provider>\n      <DataProvider>\n        <App />\n        <ToastContainer closeButton={false} />\n      </DataProvider>\n    </Web3Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}